{"version":3,"sources":["containers/Auth/Auth.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/UI/Button/Button.module.css","components/UI/Modal/Backdrop/Backdrop.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","shared/checkValidity.js","shared/dataRules.js","components/UI/Button/Button.js","components/UI/Input/Input.js","shared/endpoints.js","store/actions/actionTypes.js","store/actions/auth.js","containers/Auth/Auth.js","components/UI/Modal/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Navbar/Navbar.js","components/Footer/Footer.js","assets/Flashcards.svg","assets/Soon.svg","assets/SpacedRepetition.svg","assets/Questions.svg","components/pages/methods/Methods.js","components/pages/Main/Main.js","components/pages/Study/Study.js","components/UI/Flashcard/EmptyFlashcard/EmptyFlashcard.js","components/pages/FlashcardsHelp/FlashcardsHelp.js","hoc/Layout/Layout.js","assets/QuestionList.svg","components/pages/QuestionsHelp/QuestionsHelp.js","components/pages/SpacedRepetitionHelp/SpacedRepetitionHelp.js","components/pages/Flashcards/Flashcards.js","components/UI/Flashcard/Flashcard.js","containers/FlashcardsEditDecks/FlashcardControl/FlashcardControl.js","containers/FlashcardsEditDecks/DeckItem/DeckItem.js","containers/FlashcardsEditDecks/FlashcardsEditDecks.js","store/actions/flashcards.js","App.js","reportWebVitals.js","store/reducers/auth.js","store/reducers/flashcards.js","store/reducers/reducer.js","index.js"],"names":["module","exports","NavigationItem","link","exact","children","className","classes","to","activeClassName","active","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isStrongPassword","nameRules","isRequired","emailRules","passwordRules","button","props","Button","ButtonType","join","Input","inputValue","setValue","labelDescription","invalidResponse","isInputCorrect","inputType","type","placeholder","onChange","signupLink","signinLink","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","AUTH_SET_NAME","ADD_DECK","DELETE_DECK","PUSH_CARDS","authStart","actionTypes","authSuccess","token","localId","name","authFail","error","handleAuthTimeout","expirationTime","dispatch","setTimeout","localStorage","removeItem","authChangeUserProfile","axios","post","idToken","displayName","connect","onAuth","email","password","isSignup","authData","returnSecureToken","url","then","response","data","expiresIn","expiresOn","Date","getTime","setItem","catch","err","actions","useState","setIsSignup","setName","setEmail","setPassword","isNameCorrect","useMemo","isEmailCorrect","isPasswordCorrect","Form","onSubmit","event","preventDefault","console","log","Title","Data","target","AuthMode","onClick","Backdrop","show","clicked","Modal","modalClosed","style","transform","opacity","NavigationItems","isAuthorizing","setIsAuthorizing","Logo","NavRightSide","state","prevState","Navbar","Footer","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","x","y","width","height","rx","fill","stroke","_ref3","_ref4","d","SvgFlashcards","_ref","svgRef","title","titleId","viewBox","xmlns","ref","id","ForwardRef","SvgSoon","SvgSpacedRepetition","SvgQuestions","Methods","Main","Study","EmptyFlashcard","whiteText","greyText","FlashcardsHelp","Layout","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","SvgQuestionList","QuestionsHelp","SpacedRepetitionHelp","Flashcards","Flashcard","front","back","isCardFlipped","setIsCardFlipped","flashcardClassNames","setFlashcardClassNames","useEffect","FlashcardControl","DeckItem","deck","setActiveDeckName","deleteDeck","ChoseDeckItemClasses","isActive","flashcardsDecks","flashcardsReducer","onAddDeck","deckName","newDeck","onDeleteDeck","deckToDelete","onPushingCards","cardsArray","deckToModify","deckInputValue","setDeckInputValue","activeDeckName","isAddingCards","setIsAddingCards","cardInputFront","setCardInputFront","cardInputBack","setCardInputBack","cardsOnList","setCardsOnList","activeCardFront","setActiveCardFront","activeCardBack","setActiveCardBack","cardNumber","setCardNumber","decksArray","setDecksArray","tempDecksArray","activeDeckIndex","map","findIndex","tempDeck","addDeckHelper","push","AddNewDeckHandler","decks","deckToDeleteIndex","splice","DeleteDeckHandler","cards","card","index","e","onKeyPress","newCardNumber","tempActiveCards","withRouter","routes","path","component","FlashcardsEditDecks","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loading","redirectPath","action","authLogout","authSetName","authReducer","a","addDeck","newFlashcardDecks","pushCards","deckToChange","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","reducer","store","createStore","applyMiddleware","thunk","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.513cdc5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Auth_Form__1Tklh\",\"Data\":\"Auth_Data__3mHp3\",\"Title\":\"Auth_Title__1SJa0\",\"AuthMode\":\"Auth_AuthMode__3WJth\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\",\"Logo\":\"NavigationItems_Logo__1H4MB\",\"NavRightSide\":\"NavigationItems_NavRightSide__BtLx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1DApN\"};","import React from 'react';\nimport classes from './NavigationItem.module.css';\nimport {NavLink} from 'react-router-dom';\nconst NavigationItem = ({link, exact, children}) => (\n\t<li>\n\t\t<NavLink\n\t\t\tclassName={classes.NavigationItem}\n\t\t\tto={link}\n\t\t\texact={exact}\n\t\t\tactiveClassName={classes.active}\n\t\t>\n\t\t\t{children}\n\t\t</NavLink>\n\t</li>\n);\n\nexport default NavigationItem;\n","/*rules is an object with properties describing a value to check\nAvailable rules are: \nrequired (bool)\nminLength\nmaxLength\nisEmail (contains @ and typical email chars)\nisStrongPassword\n*/\nexport const checkValidity = (value, rules) => {\n\tlet isValid = true;\n\n\tif (!rules) {\n\t\treturn true;\n\t}\n\n\tif (rules.required) {\n\t\tisValid = value.trim() !== '' && isValid;\n\t}\n\n\tif (rules.minLength) {\n\t\tisValid = value.length >= rules.minLength && isValid;\n\t}\n\tif (rules.maxLength) {\n\t\tisValid = value.length <= rules.maxLength && isValid;\n\t}\n\tif (rules.isEmail) {\n\t\tconst pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n\t\tisValid = pattern.test(value) && isValid;\n\t}\n\n\tif (rules.isStrongPassword) {\n\t\t// eslint-disable-next-line\n\t\tconst pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n\t\tisValid = pattern.test(value) && isValid;\n\t}\n\treturn isValid;\n};\n","export const nameRules = {\n\tisRequired: true,\n\tminLength: 3,\n};\nexport const emailRules = {\n\tisRequired: true,\n\tisEmail: true,\n\tminLength: 3,\n};\nexport const passwordRules = {\n\tisRequired: true,\n\tisStrongPassword: true,\n\tminLength: 8,\n};\n","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = props => (\n\t<button className={[classes.Button, classes[props.ButtonType]].join(' ')}>\n\t\t{props.children}\n\t</button>\n);\n\nexport default button;\n","import React from 'react';\nimport './Input.css';\nconst Input = ({\n\tinputValue,\n\tsetValue,\n\tlabelDescription,\n\tinvalidResponse,\n\tisInputCorrect,\n\tinputType,\n\tisRequired,\n}) => (\n\t<div className=\"InputWrapper\">\n\t\t<label>\n\t\t\t<input\n\t\t\t\tclassName=\"Input\"\n\t\t\t\ttype={inputType}\n\t\t\t\tplaceholder=\"\"\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={setValue}\n\t\t\t\trequired={isRequired}\n\t\t\t/>\n\t\t\t<span className=\"LabelDescription\">{labelDescription}</span>\n\t\t</label>\n\t\t{!isInputCorrect && inputValue !== '' && (\n\t\t\t<span className=\"InvalidResponse\">{invalidResponse}</span>\n\t\t)}\n\t</div>\n);\n\nexport default Input;\n","export const signupLink =\n\t'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCAvwqMshaacWEh3_yqtFXiQ-yluJ2w4i0';\nexport const signinLink =\n\t'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCAvwqMshaacWEh3_yqtFXiQ-yluJ2w4i0';\nexport const updateProfileLink =\n\t'https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCAvwqMshaacWEh3_yqtFXiQ-yluJ2w4i0';\nexport const lookUpProfileLink =\n\t'https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=AIzaSyCAvwqMshaacWEh3_yqtFXiQ-yluJ2w4i0';\n","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const AUTH_SET_NAME = 'AUTH_SET_NAME';\nexport const ADD_DECK = 'ADD_DECK';\nexport const DELETE_DECK = 'DELETE_DECK';\nexport const PUSH_CARDS = 'PUSH_CARDS';\n","import axios from 'axios';\nimport {signinLink, signupLink, updateProfileLink} from '../../shared/endpoints';\n\nimport * as actionTypes from './actionTypes';\n\nconst authStart = () => {\n\treturn {\n\t\ttype: actionTypes.AUTH_START,\n\t};\n};\n\nconst authSuccess = (token, localId, name) => {\n\treturn {\n\t\ttype: actionTypes.AUTH_SUCCESS,\n\t\ttoken: token,\n\t\tlocalId: localId,\n\t\tname: name,\n\t};\n};\n\nconst authFail = error => {\n\treturn {\n\t\ttype: actionTypes.AUTH_FAIL,\n\t\terror: error,\n\t};\n};\n\nexport const logout = () => {\n\tlocalStorage.removeItem('token');\n\tlocalStorage.removeItem('expiresOn');\n\tlocalStorage.removeItem('localId');\n\tlocalStorage.removeItem('name');\n\n\treturn {\n\t\ttype: actionTypes.AUTH_LOGOUT,\n\t};\n};\n\nexport const handleAuthTimeout = expirationTime => {\n\treturn dispatch => {\n\t\tsetTimeout(() => {\n\t\t\tdispatch(logout());\n\t\t}, expirationTime * 1000);\n\t};\n};\n//It's not even an action, but had to put this helper function somewhere\nconst authChangeUserProfile = (token, name) => {\n\taxios.post(updateProfileLink, {idToken: token, displayName: name});\n};\n\nexport const auth = (email, password, isSignup, name = '') => {\n\treturn dispatch => {\n\t\tdispatch(authStart());\n\t\tconst authData = {\n\t\t\temail: email,\n\t\t\tpassword: password,\n\t\t\treturnSecureToken: true,\n\t\t};\n\n\t\tlet url = signinLink;\n\t\tif (!isSignup) {\n\t\t\turl = signupLink;\n\t\t}\n\t\taxios\n\t\t\t.post(url, authData)\n\t\t\t.then(response => {\n\t\t\t\tconst {\n\t\t\t\t\tdata: {expiresIn, idToken, localId},\n\t\t\t\t} = response;\n\t\t\t\tconst expiresOn = new Date(new Date().getTime() + expiresIn * 1000);\n\t\t\t\tlocalStorage.setItem('token', idToken);\n\t\t\t\tlocalStorage.setItem('expiresOn', expiresOn);\n\t\t\t\tlocalStorage.setItem('localId', localId);\n\t\t\t\tdispatch(authSuccess(idToken, localId));\n\t\t\t\tdispatch(handleAuthTimeout(expiresIn));\n\t\t\t\tif (name && name.trim() !== '') {\n\t\t\t\t\tauthChangeUserProfile(idToken, name);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tdispatch(authFail(err.response.data.error));\n\t\t\t});\n\t};\n};\n","import React, {useState, useCallback, useMemo} from 'react';\nimport {checkValidity} from '../../shared/checkValidity';\nimport {nameRules, emailRules, passwordRules} from '../../shared/dataRules';\nimport {connect} from 'react-redux';\n\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport classes from './Auth.module.css';\nimport * as actions from '../../store/actions/auth';\n\nconst Auth = props => {\n\t/* isSignup is switch-state between register and log in form */\n\tconst [isSignup, setIsSignup] = useState(false);\n\n\tconst [name, setName] = useState('');\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\n\tconst isNameCorrect = useMemo(() => checkValidity(name, nameRules), [name]);\n\tconst isEmailCorrect = useMemo(() => checkValidity(email, emailRules), [email]);\n\tconst isPasswordCorrect = useMemo(() => checkValidity(password, passwordRules), [password]);\n\n\tconst submitHandler = event => {\n\t\tevent.preventDefault();\n\t\t//Is not Signup => register\n\t\tconsole.log('Submit handler is workingd');\n\t\tif (!isSignup && isNameCorrect && isPasswordCorrect && isEmailCorrect) {\n\t\t\tconsole.log('Register!');\n\t\t\tprops.onAuth(email, password, isSignup, name);\n\t\t}\n\t\t// isSignup => login\n\t\telse if (isSignup && isEmailCorrect && isPasswordCorrect) {\n\t\t\tconsole.log('User is already signed up, login');\n\t\t\tprops.onAuth(email, password, isSignup);\n\t\t}\n\t};\n\n\treturn (\n\t\t<form className={classes.Form} onSubmit={submitHandler}>\n\t\t\t<span className={classes.Title}>{!isSignup ? 'Register' : 'Log in'}</span>\n\t\t\t<span className={classes.Data}>\n\t\t\t\t{!isSignup && (\n\t\t\t\t\t<Input\n\t\t\t\t\t\tinputValue={name}\n\t\t\t\t\t\tsetValue={event => setName(event.target.value)}\n\t\t\t\t\t\tlabelDescription=\"First Name\"\n\t\t\t\t\t\tinvalidResponse=\"Provide valid first name\"\n\t\t\t\t\t\tisInputCorrect={isNameCorrect}\n\t\t\t\t\t\tinputType=\"text\"\n\t\t\t\t\t\tisRequired={true}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\n\t\t\t\t<Input\n\t\t\t\t\tinputValue={email}\n\t\t\t\t\tsetValue={event => setEmail(event.target.value)}\n\t\t\t\t\tlabelDescription=\"Email\"\n\t\t\t\t\tinvalidResponse=\"Provide valid email adress\"\n\t\t\t\t\tisInputCorrect={isEmailCorrect}\n\t\t\t\t\tinputType=\"email\"\n\t\t\t\t\tisRequired={true}\n\t\t\t\t/>\n\n\t\t\t\t<Input\n\t\t\t\t\tinputValue={password}\n\t\t\t\t\tsetValue={event => setPassword(event.target.value)}\n\t\t\t\t\tlabelDescription=\"Password\"\n\t\t\t\t\tinvalidResponse=\"Correct password contains at least 8 characters, one capital letter, a\n\t\t\t\t\t\tnumber and special character\"\n\t\t\t\t\tisInputCorrect={isPasswordCorrect}\n\t\t\t\t\tinputType=\"password\"\n\t\t\t\t\tisRequired={true}\n\t\t\t\t/>\n\t\t\t</span>\n\t\t\t<span>\n\t\t\t\t<Button>{!isSignup ? 'SIGN UP' : 'SIGN IN'}</Button>\n\t\t\t\t<h3 className={classes.AuthMode} onClick={() => setIsSignup(!isSignup)}>\n\t\t\t\t\t{!isSignup\n\t\t\t\t\t\t? 'Already have an account? Sign in'\n\t\t\t\t\t\t: 'You don’t have an account yet? Sign up'}\n\t\t\t\t</h3>\n\t\t\t</span>\n\t\t</form>\n\t);\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonAuth: (email, password, isSignup, name) =>\n\t\t\tdispatch(actions.auth(email, password, isSignup, name)),\n\t};\n};\n\nexport default connect(null, mapDispatchToProps)(Auth);\n","import React from 'react';\nimport classes from './Backdrop.module.css';\n\nconst Backdrop = props =>\n\tprops.show ? (\n\t\t<div className={classes.Backdrop} onClick={props.clicked}></div>\n\t) : null;\n\nexport default Backdrop;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Modal.css';\nimport Backdrop from './Backdrop/Backdrop';\n\n//You have to pass a func to a modalClosed prop,this func has to switch the state realted to show prop.\n//when you click on the backdrop this passed function will be trigered and change state -> switch show prop and then modal will be closed\nconst Modal = ({show, modalClosed, children}) => {\n\treturn (\n\t\t<>\n\t\t\t<Backdrop show={show} clicked={modalClosed} />\n\t\t\t<div\n\t\t\t\tclassName=\"Modal\"\n\t\t\t\tstyle={{\n\t\t\t\t\ttransform: show ? 'scale(1)' : 'scale(0)',\n\t\t\t\t\topacity: show ? 1 : 0,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nModal.propTypes = {\n\tshow: PropTypes.bool.isRequired,\n\tmodalClosed: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import React from 'react';\nimport {useState} from 'react';\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n// import Button from './components/UI/Button/Button';\nimport Auth from '../../../containers/Auth/Auth';\nimport Modal from '../../UI/Modal/Modal';\n\nconst NavigationItems = props => {\n\tconst [isAuthorizing, setIsAuthorizing] = useState(false);\n\n\treturn (\n\t\t<>\n\t\t\t<ul className={classes.NavigationItems}>\n\t\t\t\t{/* This is logo, and 'home' button */}\n\t\t\t\t<NavigationItem link=\"/\" exact>\n\t\t\t\t\t<span className={classes.Logo}>Info.memo()</span>\n\t\t\t\t</NavigationItem>\n\t\t\t\t<span className={classes.NavRightSide}>\n\t\t\t\t\t<li onClick={() => setIsAuthorizing(state => !state)}>Register / Log in</li>\n\t\t\t\t\t<NavigationItem link=\"/study\">Study</NavigationItem>\n\t\t\t\t</span>\n\t\t\t</ul>\n\t\t\t<Modal\n\t\t\t\tshow={isAuthorizing}\n\t\t\t\tmodalClosed={() => {\n\t\t\t\t\tsetIsAuthorizing(prevState => !prevState);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Auth />\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nexport default NavigationItems;\n","import React from 'react';\nimport './Navbar.scss';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nconst Navbar = props => (\n\t<nav className=\"Navbar\">\n\t\t<NavigationItems />\n\t</nav>\n);\n\nexport default Navbar;\n","import React from 'react';\nimport './Footer.scss';\n\nconst Footer = props => (\n\t<div className=\"Footer\">\n\t\t<span>&copy; </span>\n\t</div>\n);\n\nexport default Footer;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 207,\n  height: 207,\n  rx: 39.5,\n  fill: \"#55CDFC\",\n  stroke: \"black\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 24,\n  y: 24,\n  width: 160,\n  height: 160,\n  rx: 20,\n  fill: \"#C4C4C4\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24 105H184V164C184 175.046 175.046 184 164 184H44C32.9543 184 24 175.046 24 164V105Z\",\n  fill: \"white\"\n});\n\nfunction SvgFlashcards(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 208,\n    height: 208,\n    viewBox: \"0 0 208 208\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFlashcards);\nexport default __webpack_public_path__ + \"static/media/Flashcards.d32365d6.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.500031,\n  width: 207,\n  height: 207,\n  rx: 39.5,\n  fill: \"#F7A8B8\",\n  stroke: \"black\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M62.6864 93.408C64.5744 93.408 66.3824 93.712 68.1104 94.32C69.8704 94.896 71.3424 95.696 72.5264 96.72L69.1664 101.856C68.2384 101.28 67.2464 100.832 66.1904 100.512C65.1344 100.16 64.0944 99.984 63.0704 99.984C61.6304 99.984 60.9104 100.368 60.9104 101.136C60.9104 101.456 61.0064 101.728 61.1984 101.952C61.3904 102.144 61.8384 102.4 62.5424 102.72C63.2784 103.008 64.4464 103.392 66.0464 103.872C68.6064 104.672 70.4944 105.696 71.7104 106.944C72.9584 108.16 73.5824 109.888 73.5824 112.128C73.5824 113.856 73.0544 115.392 71.9984 116.736C70.9744 118.08 69.5344 119.12 67.6784 119.856C65.8544 120.592 63.7744 120.96 61.4384 120.96C59.1984 120.96 57.0864 120.608 55.1024 119.904C53.1504 119.168 51.5024 118.16 50.1584 116.88L54.6704 111.888C55.6304 112.656 56.6704 113.28 57.7904 113.76C58.9424 114.208 60.0784 114.432 61.1984 114.432C62.0624 114.432 62.7184 114.304 63.1664 114.048C63.6464 113.76 63.8864 113.36 63.8864 112.848C63.8864 112.4 63.7744 112.064 63.5504 111.84C63.3584 111.584 62.9424 111.344 62.3024 111.12C61.6624 110.864 60.5424 110.496 58.9424 110.016C53.9824 108.544 51.5024 105.776 51.5024 101.712C51.5024 100.144 51.9344 98.736 52.7984 97.488C53.6944 96.24 54.9744 95.248 56.6384 94.512C58.3344 93.776 60.3504 93.408 62.6864 93.408ZM88.0863 93.408C92.1823 93.408 95.3983 94.608 97.7343 97.008C100.102 99.408 101.286 102.816 101.286 107.232C101.286 109.984 100.742 112.4 99.6543 114.48C98.5983 116.56 97.0783 118.16 95.0943 119.28C93.1103 120.4 90.7743 120.96 88.0863 120.96C83.9903 120.96 80.7583 119.76 78.3903 117.36C76.0543 114.96 74.8863 111.552 74.8863 107.136C74.8863 104.384 75.4143 101.968 76.4703 99.888C77.5583 97.808 79.0943 96.208 81.0783 95.088C83.0623 93.968 85.3983 93.408 88.0863 93.408ZM88.0863 100.224C86.8703 100.224 85.9903 100.768 85.4463 101.856C84.9023 102.944 84.6303 104.704 84.6303 107.136C84.6303 109.664 84.9023 111.472 85.4463 112.56C85.9903 113.616 86.8703 114.144 88.0863 114.144C89.3023 114.144 90.1823 113.6 90.7263 112.512C91.2703 111.424 91.5423 109.664 91.5423 107.232C91.5423 104.704 91.2703 102.912 90.7263 101.856C90.1823 100.768 89.3023 100.224 88.0863 100.224ZM116.118 93.408C120.214 93.408 123.43 94.608 125.766 97.008C128.134 99.408 129.318 102.816 129.318 107.232C129.318 109.984 128.774 112.4 127.686 114.48C126.63 116.56 125.11 118.16 123.126 119.28C121.142 120.4 118.806 120.96 116.118 120.96C112.022 120.96 108.79 119.76 106.422 117.36C104.086 114.96 102.918 111.552 102.918 107.136C102.918 104.384 103.446 101.968 104.502 99.888C105.59 97.808 107.126 96.208 109.11 95.088C111.094 93.968 113.43 93.408 116.118 93.408ZM116.118 100.224C114.902 100.224 114.022 100.768 113.478 101.856C112.934 102.944 112.662 104.704 112.662 107.136C112.662 109.664 112.934 111.472 113.478 112.56C114.022 113.616 114.902 114.144 116.118 114.144C117.334 114.144 118.214 113.6 118.758 112.512C119.302 111.424 119.574 109.664 119.574 107.232C119.574 104.704 119.302 102.912 118.758 101.856C118.214 100.768 117.334 100.224 116.118 100.224ZM148.901 93.408C151.045 93.408 152.725 94.08 153.941 95.424C155.189 96.768 155.813 98.656 155.813 101.088V120H146.309V102.816C146.309 101.856 146.181 101.2 145.925 100.848C145.701 100.496 145.349 100.32 144.869 100.32C143.813 100.32 142.741 101.168 141.653 102.864V120H132.149V94.368H140.453L141.125 97.008C142.309 95.76 143.509 94.848 144.725 94.272C145.973 93.696 147.365 93.408 148.901 93.408Z\",\n  fill: \"white\"\n});\n\nfunction SvgSoon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 208,\n    height: 208,\n    viewBox: \"0 0 208 208\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSoon);\nexport default __webpack_public_path__ + \"static/media/Soon.08985bfe.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 207,\n  height: 207,\n  rx: 39.5,\n  fill: \"#F7A8B8\",\n  stroke: \"black\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M34 169C34 177.438 40.5625 184 49 184H159C167.125 184 174 177.438 174 169V84H34V169ZM134 107.75C134 105.875 135.562 104 137.75 104H150.25C152.125 104 154 105.875 154 107.75V120.25C154 122.438 152.125 124 150.25 124H137.75C135.562 124 134 122.438 134 120.25V107.75ZM134 147.75C134 145.875 135.562 144 137.75 144H150.25C152.125 144 154 145.875 154 147.75V160.25C154 162.438 152.125 164 150.25 164H137.75C135.562 164 134 162.438 134 160.25V147.75ZM94 107.75C94 105.875 95.5625 104 97.75 104H110.25C112.125 104 114 105.875 114 107.75V120.25C114 122.438 112.125 124 110.25 124H97.75C95.5625 124 94 122.438 94 120.25V107.75ZM94 147.75C94 145.875 95.5625 144 97.75 144H110.25C112.125 144 114 145.875 114 147.75V160.25C114 162.438 112.125 164 110.25 164H97.75C95.5625 164 94 162.438 94 160.25V147.75ZM54 107.75C54 105.875 55.5625 104 57.75 104H70.25C72.125 104 74 105.875 74 107.75V120.25C74 122.438 72.125 124 70.25 124H57.75C55.5625 124 54 122.438 54 120.25V107.75ZM54 147.75C54 145.875 55.5625 144 57.75 144H70.25C72.125 144 74 145.875 74 147.75V160.25C74 162.438 72.125 164 70.25 164H57.75C55.5625 164 54 162.438 54 160.25V147.75ZM159 44H144V29C144 26.5 141.5 24 139 24H129C126.188 24 124 26.5 124 29V44H84V29C84 26.5 81.5 24 79 24H69C66.1875 24 64 26.5 64 29V44H49C40.5625 44 34 50.875 34 59V74H174V59C174 50.875 167.125 44 159 44Z\",\n  fill: \"white\"\n});\n\nfunction SvgSpacedRepetition(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 208,\n    height: 208,\n    viewBox: \"0 0 208 208\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSpacedRepetition);\nexport default __webpack_public_path__ + \"static/media/SpacedRepetition.e011c260.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 207,\n  height: 207,\n  rx: 39.5,\n  fill: \"#55CDFC\",\n  stroke: \"black\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M107.125 24C82.125 24 65.875 34.3125 53.0625 52.75C50.875 55.875 51.5 60.5625 54.9375 62.75L68.375 73.0625C71.5 75.5625 76.1875 74.9375 78.6875 71.8125C86.5 62.125 92.4375 56.5 104.625 56.5C114.312 56.5 126.188 62.4375 126.188 71.8125C126.188 79 120.25 82.4375 110.875 87.75C99.625 94 84.9375 101.812 84.9375 121.188V124C84.9375 128.375 88.375 131.5 92.4375 131.5H115.25C119.312 131.5 122.75 128.375 122.75 124V122.438C122.75 109 161.812 108.375 161.812 72.125C161.812 44.9375 133.375 24 107.125 24ZM104 140.875C91.8125 140.875 82.125 150.562 82.125 162.438C82.125 174.312 91.8125 184 104 184C115.875 184 125.562 174.312 125.562 162.438C125.562 150.562 115.875 140.875 104 140.875Z\",\n  fill: \"white\"\n});\n\nfunction SvgQuestions(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 208,\n    height: 208,\n    viewBox: \"0 0 208 208\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgQuestions);\nexport default __webpack_public_path__ + \"static/media/Questions.6e90f648.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport {ReactComponent as Flashcards} from '../../../assets/Flashcards.svg';\nimport {ReactComponent as Soon} from '../../../assets/Soon.svg';\nimport {ReactComponent as SpacedRepetition} from '../../../assets/SpacedRepetition.svg';\nimport {ReactComponent as Questions} from '../../../assets/Questions.svg';\nimport {Link} from 'react-router-dom';\n\nimport './Methods.scss';\nconst Methods = props => (\n\t<div className=\"Methods\">\n\t\t<div className=\"Row\">\n\t\t\t<Link to=\"/flashcards-help\">\n\t\t\t\t<Flashcards />\n\t\t\t</Link>\n\t\t\t<Link to=\"/\" className=\"Disabled\">\n\t\t\t\t<Soon className=\"Disabled\" />\n\t\t\t</Link>\n\t\t</div>\n\t\t<div className=\"Row\">\n\t\t\t<Link to=\"/spaced-repetition-help\">\n\t\t\t\t<SpacedRepetition />\n\t\t\t</Link>\n\t\t\t<Link to=\"/questions-help\">\n\t\t\t\t<Questions />\n\t\t\t</Link>\n\t\t</div>\n\t</div>\n);\n\nexport default Methods;\n","import React from 'react';\nimport Methods from '../methods/Methods';\nimport './Main.scss';\nimport '../../../hoc/Layout/Layout.scss';\nimport '../methods/Methods.scss';\nconst Main = props => (\n\t<>\n\t\t<div className=\"LeftSide\">\n\t\t\t<p>\n\t\t\t\tInfo.memo() is a tool that will help you remember things! We created this website\n\t\t\t\twith a mission to help anyone who had ever struggled with studying.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tYou can choose your favourite learining method, all of them are scientifically\n\t\t\t\tproven.\n\t\t\t</p>\n\t\t</div>\n\t\t<div className=\"RightSide\">\n\t\t\t<Methods />\n\t\t</div>\n\t</>\n);\n\nexport default Main;\n","import React from 'react';\nimport Methods from '../methods/Methods';\nimport './Study.scss';\nimport '../methods/Methods.scss';\nconst Study = props => (\n\t<div className=\"Study\">\n\t\t<Methods />\n\t</div>\n);\n\nexport default Study;\n","import React from 'react';\nimport './EmptyFlashcard.css';\nconst EmptyFlashcard = ({whiteText, greyText}) => (\n\t<div className=\"EmptyFlashcard\">\n\t\t<span className=\"GreyText\">{greyText}</span>\n\t\t<span className=\"WhiteText\">{whiteText}</span>\n\t</div>\n);\n\nexport default EmptyFlashcard;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport EmptyFlashcard from '../../UI/Flashcard/EmptyFlashcard/EmptyFlashcard';\nimport Button from '../../UI/Button/Button';\n\nimport './FlashcardsHelp.scss';\nimport '../../../hoc/Layout/Layout.scss';\nconst FlashcardsHelp = props => (\n\t<>\n\t\t<div className=\"LeftSide\">\n\t\t\t<p>\n\t\t\t\tFlashcards is a method that helps you with remembering words or pieces of\n\t\t\t\tinformation that can be described with one word.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tOn the one side of the card you write some clue or a word in a foreign language. On\n\t\t\t\tthe other you write the information or a word that you want to learn. While\n\t\t\t\tlearning, you'll see the front of the card and then say the word from the back of\n\t\t\t\tthe card out loud. After that you can check if you were correct and give yourself\n\t\t\t\tpoints or schedule to repeat again. You can create decks of cards to categorise your\n\t\t\t\tstudy subjects.\n\t\t\t</p>\n\t\t</div>\n\t\t<div className=\"RightSide FlashcardsHelp\">\n\t\t\t<EmptyFlashcard whiteText=\"perro\" greyText=\"dog\"></EmptyFlashcard>\n\t\t\t<Link to=\"/flashcards\">\n\t\t\t\t<Button>STUDY</Button>\n\t\t\t</Link>\n\t\t</div>\n\t</>\n);\n\nexport default FlashcardsHelp;\n","import React from 'react';\nimport './Layout.scss';\n\nconst Layout = ({children}) => <div className=\"Layout\">{children}</div>;\n\nexport default Layout;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 1.5,\n  width: 479,\n  height: 479,\n  fill: \"white\",\n  stroke: \"black\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 440.5,\n  width: 479,\n  height: 39,\n  fill: \"white\",\n  stroke: \"black\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M25.238 456.658V459.358H27.866V460.726H25.238V463.408H23.726V460.726H21.116V459.358H23.726V456.658H25.238ZM42.1521 466L41.2161 462.886H36.5181L35.5821 466H33.8541L37.8321 453.598H39.9921L43.9521 466H42.1521ZM36.9321 461.5H40.8021L38.8761 455.02L36.9321 461.5ZM53.1185 452.698V466H51.6605L51.4985 464.686C51.1865 465.166 50.7965 465.544 50.3285 465.82C49.8605 466.084 49.3385 466.216 48.7625 466.216C47.6345 466.216 46.7525 465.772 46.1165 464.884C45.4925 463.996 45.1805 462.802 45.1805 461.302C45.1805 460.33 45.3305 459.466 45.6305 458.71C45.9305 457.954 46.3625 457.366 46.9265 456.946C47.4905 456.514 48.1505 456.298 48.9065 456.298C49.8785 456.298 50.7305 456.688 51.4625 457.468V452.5L53.1185 452.698ZM49.1225 464.902C49.6265 464.902 50.0585 464.788 50.4185 464.56C50.7785 464.32 51.1265 463.966 51.4625 463.498V458.854C51.1505 458.446 50.8145 458.14 50.4545 457.936C50.1065 457.72 49.7105 457.612 49.2665 457.612C48.5345 457.612 47.9645 457.918 47.5565 458.53C47.1605 459.142 46.9625 460.054 46.9625 461.266C46.9625 462.49 47.1485 463.402 47.5205 464.002C47.8925 464.602 48.4265 464.902 49.1225 464.902ZM63.8763 452.698V466H62.4183L62.2563 464.686C61.9443 465.166 61.5543 465.544 61.0863 465.82C60.6183 466.084 60.0963 466.216 59.5203 466.216C58.3923 466.216 57.5103 465.772 56.8743 464.884C56.2503 463.996 55.9383 462.802 55.9383 461.302C55.9383 460.33 56.0883 459.466 56.3883 458.71C56.6883 457.954 57.1203 457.366 57.6843 456.946C58.2483 456.514 58.9083 456.298 59.6643 456.298C60.6363 456.298 61.4883 456.688 62.2203 457.468V452.5L63.8763 452.698ZM59.8803 464.902C60.3843 464.902 60.8163 464.788 61.1763 464.56C61.5363 464.32 61.8843 463.966 62.2203 463.498V458.854C61.9083 458.446 61.5723 458.14 61.2123 457.936C60.8643 457.72 60.4683 457.612 60.0243 457.612C59.2923 457.612 58.7223 457.918 58.3143 458.53C57.9183 459.142 57.7203 460.054 57.7203 461.266C57.7203 462.49 57.9063 463.402 58.2783 464.002C58.6503 464.602 59.1843 464.902 59.8803 464.902ZM78.4438 463.786C78.4438 464.17 78.5098 464.458 78.6418 464.65C78.7738 464.83 78.9718 464.968 79.2358 465.064L78.8578 466.216C78.3658 466.156 77.9698 466.018 77.6698 465.802C77.3698 465.586 77.1478 465.25 77.0038 464.794C76.3678 465.742 75.4258 466.216 74.1778 466.216C73.2418 466.216 72.5038 465.952 71.9638 465.424C71.4238 464.896 71.1538 464.206 71.1538 463.354C71.1538 462.346 71.5138 461.572 72.2338 461.032C72.9658 460.492 73.9978 460.222 75.3298 460.222H76.7878V459.52C76.7878 458.848 76.6258 458.368 76.3018 458.08C75.9778 457.792 75.4798 457.648 74.8078 457.648C74.1118 457.648 73.2598 457.816 72.2518 458.152L71.8378 456.946C73.0138 456.514 74.1058 456.298 75.1138 456.298C76.2298 456.298 77.0638 456.574 77.6158 457.126C78.1678 457.666 78.4438 458.44 78.4438 459.448V463.786ZM74.5558 464.974C75.5038 464.974 76.2478 464.482 76.7878 463.498V461.32H75.5458C73.7938 461.32 72.9178 461.968 72.9178 463.264C72.9178 463.828 73.0558 464.254 73.3318 464.542C73.6078 464.83 74.0158 464.974 74.5558 464.974ZM86.3088 456.298C87.1728 456.298 87.8448 456.556 88.3248 457.072C88.8168 457.588 89.0628 458.296 89.0628 459.196V466H87.4068V459.43C87.4068 458.758 87.2808 458.284 87.0288 458.008C86.7768 457.732 86.4048 457.594 85.9128 457.594C85.4088 457.594 84.9648 457.738 84.5808 458.026C84.1968 458.314 83.8368 458.728 83.5008 459.268V466H81.8448V456.514H83.2668L83.4108 457.918C83.7468 457.414 84.1608 457.018 84.6528 456.73C85.1568 456.442 85.7088 456.298 86.3088 456.298ZM95.9556 456.298C97.2876 456.298 98.3196 456.742 99.0516 457.63C99.7956 458.518 100.168 459.724 100.168 461.248C100.168 462.232 99.9996 463.102 99.6636 463.858C99.3276 464.602 98.8416 465.184 98.2056 465.604C97.5696 466.012 96.8136 466.216 95.9376 466.216C94.6056 466.216 93.5676 465.772 92.8236 464.884C92.0796 463.996 91.7076 462.79 91.7076 461.266C91.7076 460.282 91.8756 459.418 92.2116 458.674C92.5476 457.918 93.0336 457.336 93.6696 456.928C94.3056 456.508 95.0676 456.298 95.9556 456.298ZM95.9556 457.63C94.3116 457.63 93.4896 458.842 93.4896 461.266C93.4896 463.678 94.3056 464.884 95.9376 464.884C97.5696 464.884 98.3856 463.672 98.3856 461.248C98.3856 458.836 97.5756 457.63 95.9556 457.63ZM107.691 465.568C107.067 466 106.359 466.216 105.567 466.216C104.763 466.216 104.133 465.988 103.677 465.532C103.233 465.064 103.011 464.392 103.011 463.516V457.792H101.355V456.514H103.011V454.372L104.667 454.174V456.514H106.917L106.737 457.792H104.667V463.444C104.667 463.936 104.751 464.296 104.919 464.524C105.099 464.74 105.393 464.848 105.801 464.848C106.173 464.848 106.593 464.722 107.061 464.47L107.691 465.568ZM113.871 456.298C114.735 456.298 115.407 456.556 115.887 457.072C116.379 457.588 116.625 458.296 116.625 459.196V466H114.969V459.43C114.969 458.758 114.837 458.284 114.573 458.008C114.321 457.732 113.949 457.594 113.457 457.594C112.965 457.594 112.527 457.738 112.143 458.026C111.759 458.314 111.399 458.722 111.063 459.25V466H109.407V452.716L111.063 452.536V457.828C111.807 456.808 112.743 456.298 113.871 456.298ZM127.118 460.978C127.118 461.254 127.106 461.536 127.082 461.824H121.034C121.106 462.868 121.37 463.636 121.826 464.128C122.282 464.62 122.87 464.866 123.59 464.866C124.046 464.866 124.466 464.8 124.85 464.668C125.234 464.536 125.636 464.326 126.056 464.038L126.776 465.028C125.768 465.82 124.664 466.216 123.464 466.216C122.144 466.216 121.112 465.784 120.368 464.92C119.636 464.056 119.27 462.868 119.27 461.356C119.27 460.372 119.426 459.502 119.738 458.746C120.062 457.978 120.518 457.378 121.106 456.946C121.706 456.514 122.408 456.298 123.212 456.298C124.472 456.298 125.438 456.712 126.11 457.54C126.782 458.368 127.118 459.514 127.118 460.978ZM125.48 460.492C125.48 459.556 125.294 458.842 124.922 458.35C124.55 457.858 123.992 457.612 123.248 457.612C121.892 457.612 121.154 458.608 121.034 460.6H125.48V460.492ZM133.885 456.298C134.221 456.298 134.533 456.334 134.821 456.406L134.515 458.026C134.227 457.954 133.951 457.918 133.687 457.918C133.099 457.918 132.625 458.134 132.265 458.566C131.905 458.998 131.623 459.67 131.419 460.582V466H129.763V456.514H131.185L131.347 458.44C131.599 457.732 131.941 457.198 132.373 456.838C132.805 456.478 133.309 456.298 133.885 456.298ZM148.814 456.514V469.834L147.158 469.636V464.74C146.846 465.208 146.456 465.574 145.988 465.838C145.532 466.09 145.022 466.216 144.458 466.216C143.33 466.216 142.448 465.772 141.812 464.884C141.188 463.996 140.876 462.802 140.876 461.302C140.876 460.33 141.026 459.466 141.326 458.71C141.626 457.954 142.058 457.366 142.622 456.946C143.186 456.514 143.846 456.298 144.602 456.298C145.61 456.298 146.498 456.724 147.266 457.576L147.392 456.514H148.814ZM144.818 464.902C145.322 464.902 145.754 464.788 146.114 464.56C146.474 464.32 146.822 463.966 147.158 463.498V458.854C146.846 458.446 146.51 458.14 146.15 457.936C145.802 457.72 145.406 457.612 144.962 457.612C144.23 457.612 143.66 457.918 143.252 458.53C142.856 459.142 142.658 460.054 142.658 461.266C142.658 462.49 142.844 463.402 143.216 464.002C143.588 464.602 144.122 464.902 144.818 464.902ZM159.284 466H157.862L157.736 464.524C157.376 465.112 156.962 465.544 156.494 465.82C156.026 466.084 155.456 466.216 154.784 466.216C153.956 466.216 153.308 465.964 152.84 465.46C152.372 464.956 152.138 464.242 152.138 463.318V456.514H153.794V463.138C153.794 463.786 153.908 464.248 154.136 464.524C154.364 464.788 154.736 464.92 155.252 464.92C156.176 464.92 156.968 464.374 157.628 463.282V456.514H159.284V466ZM169.868 460.978C169.868 461.254 169.856 461.536 169.832 461.824H163.784C163.856 462.868 164.12 463.636 164.576 464.128C165.032 464.62 165.62 464.866 166.34 464.866C166.796 464.866 167.216 464.8 167.6 464.668C167.984 464.536 168.386 464.326 168.806 464.038L169.526 465.028C168.518 465.82 167.414 466.216 166.214 466.216C164.894 466.216 163.862 465.784 163.118 464.92C162.386 464.056 162.02 462.868 162.02 461.356C162.02 460.372 162.176 459.502 162.488 458.746C162.812 457.978 163.268 457.378 163.856 456.946C164.456 456.514 165.158 456.298 165.962 456.298C167.222 456.298 168.188 456.712 168.86 457.54C169.532 458.368 169.868 459.514 169.868 460.978ZM168.23 460.492C168.23 459.556 168.044 458.842 167.672 458.35C167.3 457.858 166.742 457.612 165.998 457.612C164.642 457.612 163.904 458.608 163.784 460.6H168.23V460.492ZM175.087 456.298C175.735 456.298 176.317 456.388 176.833 456.568C177.349 456.748 177.841 457.018 178.309 457.378L177.607 458.422C177.175 458.146 176.761 457.942 176.365 457.81C175.981 457.678 175.573 457.612 175.141 457.612C174.601 457.612 174.175 457.726 173.863 457.954C173.551 458.17 173.395 458.47 173.395 458.854C173.395 459.238 173.539 459.538 173.827 459.754C174.127 459.97 174.661 460.18 175.429 460.384C176.485 460.648 177.271 461.008 177.787 461.464C178.315 461.92 178.579 462.544 178.579 463.336C178.579 464.272 178.213 464.986 177.481 465.478C176.761 465.97 175.879 466.216 174.835 466.216C173.395 466.216 172.201 465.802 171.253 464.974L172.135 463.966C172.939 464.578 173.827 464.884 174.799 464.884C175.423 464.884 175.915 464.758 176.275 464.506C176.647 464.242 176.833 463.888 176.833 463.444C176.833 463.12 176.767 462.862 176.635 462.67C176.503 462.466 176.275 462.292 175.951 462.148C175.627 461.992 175.153 461.83 174.529 461.662C173.521 461.398 172.789 461.044 172.333 460.6C171.889 460.156 171.667 459.592 171.667 458.908C171.667 458.416 171.811 457.972 172.099 457.576C172.399 457.168 172.807 456.856 173.323 456.64C173.851 456.412 174.439 456.298 175.087 456.298ZM185.703 465.568C185.079 466 184.371 466.216 183.579 466.216C182.775 466.216 182.145 465.988 181.689 465.532C181.245 465.064 181.023 464.392 181.023 463.516V457.792H179.367V456.514H181.023V454.372L182.679 454.174V456.514H184.929L184.749 457.792H182.679V463.444C182.679 463.936 182.763 464.296 182.931 464.524C183.111 464.74 183.405 464.848 183.813 464.848C184.185 464.848 184.605 464.722 185.073 464.47L185.703 465.568ZM189.075 456.514V466H187.419V456.514H189.075ZM188.229 451.96C188.577 451.96 188.859 452.068 189.075 452.284C189.291 452.5 189.399 452.77 189.399 453.094C189.399 453.418 189.291 453.688 189.075 453.904C188.859 454.108 188.577 454.21 188.229 454.21C187.893 454.21 187.617 454.108 187.401 453.904C187.185 453.688 187.077 453.418 187.077 453.094C187.077 452.77 187.185 452.5 187.401 452.284C187.617 452.068 187.893 451.96 188.229 451.96ZM196.063 456.298C197.395 456.298 198.427 456.742 199.159 457.63C199.903 458.518 200.275 459.724 200.275 461.248C200.275 462.232 200.107 463.102 199.771 463.858C199.435 464.602 198.949 465.184 198.313 465.604C197.677 466.012 196.921 466.216 196.045 466.216C194.713 466.216 193.675 465.772 192.931 464.884C192.187 463.996 191.815 462.79 191.815 461.266C191.815 460.282 191.983 459.418 192.319 458.674C192.655 457.918 193.141 457.336 193.777 456.928C194.413 456.508 195.175 456.298 196.063 456.298ZM196.063 457.63C194.419 457.63 193.597 458.842 193.597 461.266C193.597 463.678 194.413 464.884 196.045 464.884C197.677 464.884 198.493 463.672 198.493 461.248C198.493 458.836 197.683 457.63 196.063 457.63ZM207.475 456.298C208.339 456.298 209.011 456.556 209.491 457.072C209.983 457.588 210.229 458.296 210.229 459.196V466H208.573V459.43C208.573 458.758 208.447 458.284 208.195 458.008C207.943 457.732 207.571 457.594 207.079 457.594C206.575 457.594 206.131 457.738 205.747 458.026C205.363 458.314 205.003 458.728 204.667 459.268V466H203.011V456.514H204.433L204.577 457.918C204.913 457.414 205.327 457.018 205.819 456.73C206.323 456.442 206.875 456.298 207.475 456.298Z\",\n  fill: \"#6C6C6C\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 400.5,\n  width: 479,\n  height: 39,\n  fill: \"white\",\n  stroke: \"black\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 360.5,\n  width: 479,\n  height: 39,\n  fill: \"white\",\n  stroke: \"black\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 320.5,\n  width: 479,\n  height: 39,\n  fill: \"white\",\n  stroke: \"black\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 280.5,\n  width: 479,\n  height: 39,\n  fill: \"white\",\n  stroke: \"black\"\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 240.5,\n  width: 479,\n  height: 39,\n  fill: \"white\",\n  stroke: \"black\"\n});\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 200.5,\n  width: 479,\n  height: 39,\n  fill: \"white\",\n  stroke: \"black\"\n});\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 160.5,\n  width: 479,\n  height: 39,\n  fill: \"white\",\n  stroke: \"black\"\n});\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 120.5,\n  width: 479,\n  height: 39,\n  fill: \"#FFD698\",\n  stroke: \"black\"\n});\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24.05 132.778C24.794 132.778 25.43 132.916 25.958 133.192C26.498 133.468 26.906 133.84 27.182 134.308C27.47 134.776 27.614 135.286 27.614 135.838C27.614 136.57 27.398 137.176 26.966 137.656C26.546 138.124 25.982 138.442 25.274 138.61C26.078 138.682 26.732 138.97 27.236 139.474C27.74 139.978 27.992 140.662 27.992 141.526C27.992 142.222 27.824 142.852 27.488 143.416C27.152 143.98 26.672 144.424 26.048 144.748C25.424 145.06 24.704 145.216 23.888 145.216C23.156 145.216 22.484 145.084 21.872 144.82C21.26 144.544 20.726 144.136 20.27 143.596L21.26 142.678C21.656 143.086 22.058 143.386 22.466 143.578C22.886 143.77 23.342 143.866 23.834 143.866C24.59 143.866 25.184 143.656 25.616 143.236C26.048 142.804 26.264 142.228 26.264 141.508C26.264 140.716 26.06 140.158 25.652 139.834C25.244 139.51 24.65 139.348 23.87 139.348H22.97L23.168 138.07H23.78C24.404 138.07 24.92 137.884 25.328 137.512C25.748 137.14 25.958 136.618 25.958 135.946C25.958 135.382 25.778 134.938 25.418 134.614C25.058 134.278 24.572 134.11 23.96 134.11C23.492 134.11 23.06 134.194 22.664 134.362C22.28 134.53 21.884 134.806 21.476 135.19L20.612 134.2C21.632 133.252 22.778 132.778 24.05 132.778ZM31.1244 142.714C31.4844 142.714 31.7844 142.834 32.0244 143.074C32.2644 143.314 32.3844 143.608 32.3844 143.956C32.3844 144.304 32.2644 144.604 32.0244 144.856C31.7844 145.096 31.4844 145.216 31.1244 145.216C30.7764 145.216 30.4824 145.096 30.2424 144.856C30.0024 144.604 29.8824 144.304 29.8824 143.956C29.8824 143.608 30.0024 143.314 30.2424 143.074C30.4824 142.834 30.7764 142.714 31.1244 142.714ZM52.4883 132.598L49.9683 145H47.7723L45.4863 134.614L43.1823 145H41.0403L38.5203 132.598H40.1943L42.1923 143.506L44.5863 132.598H46.4043L48.8523 143.506L50.9223 132.598H52.4883ZM59.1154 135.298C59.9794 135.298 60.6514 135.556 61.1314 136.072C61.6234 136.588 61.8694 137.296 61.8694 138.196V145H60.2134V138.43C60.2134 137.758 60.0814 137.284 59.8174 137.008C59.5654 136.732 59.1934 136.594 58.7014 136.594C58.2094 136.594 57.7714 136.738 57.3874 137.026C57.0034 137.314 56.6434 137.722 56.3074 138.25V145H54.6514V131.716L56.3074 131.536V136.828C57.0514 135.808 57.9874 135.298 59.1154 135.298ZM71.5883 142.786C71.5883 143.17 71.6543 143.458 71.7863 143.65C71.9183 143.83 72.1163 143.968 72.3803 144.064L72.0023 145.216C71.5103 145.156 71.1143 145.018 70.8143 144.802C70.5143 144.586 70.2923 144.25 70.1483 143.794C69.5123 144.742 68.5703 145.216 67.3223 145.216C66.3863 145.216 65.6483 144.952 65.1083 144.424C64.5683 143.896 64.2983 143.206 64.2983 142.354C64.2983 141.346 64.6583 140.572 65.3783 140.032C66.1103 139.492 67.1423 139.222 68.4743 139.222H69.9323V138.52C69.9323 137.848 69.7703 137.368 69.4463 137.08C69.1223 136.792 68.6243 136.648 67.9523 136.648C67.2563 136.648 66.4043 136.816 65.3963 137.152L64.9823 135.946C66.1583 135.514 67.2503 135.298 68.2583 135.298C69.3743 135.298 70.2083 135.574 70.7603 136.126C71.3123 136.666 71.5883 137.44 71.5883 138.448V142.786ZM67.7003 143.974C68.6483 143.974 69.3923 143.482 69.9323 142.498V140.32H68.6903C66.9383 140.32 66.0623 140.968 66.0623 142.264C66.0623 142.828 66.2003 143.254 66.4763 143.542C66.7523 143.83 67.1603 143.974 67.7003 143.974ZM79.7773 144.568C79.1533 145 78.4453 145.216 77.6533 145.216C76.8493 145.216 76.2193 144.988 75.7633 144.532C75.3193 144.064 75.0973 143.392 75.0973 142.516V136.792H73.4413V135.514H75.0973V133.372L76.7533 133.174V135.514H79.0033L78.8233 136.792H76.7533V142.444C76.7533 142.936 76.8373 143.296 77.0053 143.524C77.1853 143.74 77.4793 143.848 77.8873 143.848C78.2593 143.848 78.6793 143.722 79.1473 143.47L79.7773 144.568ZM87.9129 135.514V145H86.2569V135.514H87.9129ZM87.0669 130.96C87.4149 130.96 87.6969 131.068 87.9129 131.284C88.1289 131.5 88.2369 131.77 88.2369 132.094C88.2369 132.418 88.1289 132.688 87.9129 132.904C87.6969 133.108 87.4149 133.21 87.0669 133.21C86.7309 133.21 86.4549 133.108 86.2389 132.904C86.0229 132.688 85.9149 132.418 85.9149 132.094C85.9149 131.77 86.0229 131.5 86.2389 131.284C86.4549 131.068 86.7309 130.96 87.0669 130.96ZM93.911 135.298C94.559 135.298 95.141 135.388 95.657 135.568C96.173 135.748 96.665 136.018 97.133 136.378L96.431 137.422C95.999 137.146 95.585 136.942 95.189 136.81C94.805 136.678 94.397 136.612 93.965 136.612C93.425 136.612 92.999 136.726 92.687 136.954C92.375 137.17 92.219 137.47 92.219 137.854C92.219 138.238 92.363 138.538 92.651 138.754C92.951 138.97 93.485 139.18 94.253 139.384C95.309 139.648 96.095 140.008 96.611 140.464C97.139 140.92 97.403 141.544 97.403 142.336C97.403 143.272 97.037 143.986 96.305 144.478C95.585 144.97 94.703 145.216 93.659 145.216C92.219 145.216 91.025 144.802 90.077 143.974L90.959 142.966C91.763 143.578 92.651 143.884 93.623 143.884C94.247 143.884 94.739 143.758 95.099 143.506C95.471 143.242 95.657 142.888 95.657 142.444C95.657 142.12 95.591 141.862 95.459 141.67C95.327 141.466 95.099 141.292 94.775 141.148C94.451 140.992 93.977 140.83 93.353 140.662C92.345 140.398 91.613 140.044 91.157 139.6C90.713 139.156 90.491 138.592 90.491 137.908C90.491 137.416 90.635 136.972 90.923 136.576C91.223 136.168 91.631 135.856 92.147 135.64C92.675 135.412 93.263 135.298 93.911 135.298ZM109.291 144.568C108.667 145 107.959 145.216 107.167 145.216C106.363 145.216 105.733 144.988 105.277 144.532C104.833 144.064 104.611 143.392 104.611 142.516V136.792H102.955V135.514H104.611V133.372L106.267 133.174V135.514H108.517L108.337 136.792H106.267V142.444C106.267 142.936 106.351 143.296 106.519 143.524C106.699 143.74 106.993 143.848 107.401 143.848C107.773 143.848 108.193 143.722 108.661 143.47L109.291 144.568ZM115.471 135.298C116.335 135.298 117.007 135.556 117.487 136.072C117.979 136.588 118.225 137.296 118.225 138.196V145H116.569V138.43C116.569 137.758 116.437 137.284 116.173 137.008C115.921 136.732 115.549 136.594 115.057 136.594C114.565 136.594 114.127 136.738 113.743 137.026C113.359 137.314 112.999 137.722 112.663 138.25V145H111.007V131.716L112.663 131.536V136.828C113.407 135.808 114.343 135.298 115.471 135.298ZM128.718 139.978C128.718 140.254 128.706 140.536 128.682 140.824H122.634C122.706 141.868 122.97 142.636 123.426 143.128C123.882 143.62 124.47 143.866 125.19 143.866C125.646 143.866 126.066 143.8 126.45 143.668C126.834 143.536 127.236 143.326 127.656 143.038L128.376 144.028C127.368 144.82 126.264 145.216 125.064 145.216C123.744 145.216 122.712 144.784 121.968 143.92C121.236 143.056 120.87 141.868 120.87 140.356C120.87 139.372 121.026 138.502 121.338 137.746C121.662 136.978 122.118 136.378 122.706 135.946C123.306 135.514 124.008 135.298 124.812 135.298C126.072 135.298 127.038 135.712 127.71 136.54C128.382 137.368 128.718 138.514 128.718 139.978ZM127.08 139.492C127.08 138.556 126.894 137.842 126.522 137.35C126.15 136.858 125.592 136.612 124.848 136.612C123.492 136.612 122.754 137.608 122.634 139.6H127.08V139.492ZM139.582 135.298C140.146 135.298 140.662 135.382 141.13 135.55C141.598 135.706 142.048 135.964 142.48 136.324L141.688 137.368C141.352 137.128 141.022 136.954 140.698 136.846C140.386 136.726 140.038 136.666 139.654 136.666C138.886 136.666 138.286 136.972 137.854 137.584C137.434 138.196 137.224 139.102 137.224 140.302C137.224 141.502 137.434 142.39 137.854 142.966C138.274 143.53 138.874 143.812 139.654 143.812C140.026 143.812 140.368 143.758 140.68 143.65C140.992 143.53 141.34 143.344 141.724 143.092L142.48 144.172C141.616 144.868 140.65 145.216 139.582 145.216C138.298 145.216 137.284 144.784 136.54 143.92C135.808 143.056 135.442 141.862 135.442 140.338C135.442 139.33 135.61 138.448 135.946 137.692C136.282 136.936 136.756 136.348 137.368 135.928C137.992 135.508 138.73 135.298 139.582 135.298ZM146.612 145.216C146 145.216 145.514 145.036 145.154 144.676C144.806 144.304 144.632 143.788 144.632 143.128V131.698L146.288 131.5V143.092C146.288 143.356 146.33 143.548 146.414 143.668C146.51 143.788 146.666 143.848 146.882 143.848C147.11 143.848 147.314 143.812 147.494 143.74L147.926 144.892C147.53 145.108 147.092 145.216 146.612 145.216ZM153.471 135.298C154.803 135.298 155.835 135.742 156.567 136.63C157.311 137.518 157.683 138.724 157.683 140.248C157.683 141.232 157.515 142.102 157.179 142.858C156.843 143.602 156.357 144.184 155.721 144.604C155.085 145.012 154.329 145.216 153.453 145.216C152.121 145.216 151.083 144.772 150.339 143.884C149.595 142.996 149.223 141.79 149.223 140.266C149.223 139.282 149.391 138.418 149.727 137.674C150.063 136.918 150.549 136.336 151.185 135.928C151.821 135.508 152.583 135.298 153.471 135.298ZM153.471 136.63C151.827 136.63 151.005 137.842 151.005 140.266C151.005 142.678 151.821 143.884 153.453 143.884C155.085 143.884 155.901 142.672 155.901 140.248C155.901 137.836 155.091 136.63 153.471 136.63ZM162.993 135.298C163.641 135.298 164.223 135.388 164.739 135.568C165.255 135.748 165.747 136.018 166.215 136.378L165.513 137.422C165.081 137.146 164.667 136.942 164.271 136.81C163.887 136.678 163.479 136.612 163.047 136.612C162.507 136.612 162.081 136.726 161.769 136.954C161.457 137.17 161.301 137.47 161.301 137.854C161.301 138.238 161.445 138.538 161.733 138.754C162.033 138.97 162.567 139.18 163.335 139.384C164.391 139.648 165.177 140.008 165.693 140.464C166.221 140.92 166.485 141.544 166.485 142.336C166.485 143.272 166.119 143.986 165.387 144.478C164.667 144.97 163.785 145.216 162.741 145.216C161.301 145.216 160.107 144.802 159.159 143.974L160.041 142.966C160.845 143.578 161.733 143.884 162.705 143.884C163.329 143.884 163.821 143.758 164.181 143.506C164.553 143.242 164.739 142.888 164.739 142.444C164.739 142.12 164.673 141.862 164.541 141.67C164.409 141.466 164.181 141.292 163.857 141.148C163.533 140.992 163.059 140.83 162.435 140.662C161.427 140.398 160.695 140.044 160.239 139.6C159.795 139.156 159.573 138.592 159.573 137.908C159.573 137.416 159.717 136.972 160.005 136.576C160.305 136.168 160.713 135.856 161.229 135.64C161.757 135.412 162.345 135.298 162.993 135.298ZM175.985 139.978C175.985 140.254 175.973 140.536 175.949 140.824H169.901C169.973 141.868 170.237 142.636 170.693 143.128C171.149 143.62 171.737 143.866 172.457 143.866C172.913 143.866 173.333 143.8 173.717 143.668C174.101 143.536 174.503 143.326 174.923 143.038L175.643 144.028C174.635 144.82 173.531 145.216 172.331 145.216C171.011 145.216 169.979 144.784 169.235 143.92C168.503 143.056 168.137 141.868 168.137 140.356C168.137 139.372 168.293 138.502 168.605 137.746C168.929 136.978 169.385 136.378 169.973 135.946C170.573 135.514 171.275 135.298 172.079 135.298C173.339 135.298 174.305 135.712 174.977 136.54C175.649 137.368 175.985 138.514 175.985 139.978ZM174.347 139.492C174.347 138.556 174.161 137.842 173.789 137.35C173.417 136.858 172.859 136.612 172.115 136.612C170.759 136.612 170.021 137.608 169.901 139.6H174.347V139.492ZM181.204 135.298C181.852 135.298 182.434 135.388 182.95 135.568C183.466 135.748 183.958 136.018 184.426 136.378L183.724 137.422C183.292 137.146 182.878 136.942 182.482 136.81C182.098 136.678 181.69 136.612 181.258 136.612C180.718 136.612 180.292 136.726 179.98 136.954C179.668 137.17 179.512 137.47 179.512 137.854C179.512 138.238 179.656 138.538 179.944 138.754C180.244 138.97 180.778 139.18 181.546 139.384C182.602 139.648 183.388 140.008 183.904 140.464C184.432 140.92 184.696 141.544 184.696 142.336C184.696 143.272 184.33 143.986 183.598 144.478C182.878 144.97 181.996 145.216 180.952 145.216C179.512 145.216 178.318 144.802 177.37 143.974L178.252 142.966C179.056 143.578 179.944 143.884 180.916 143.884C181.54 143.884 182.032 143.758 182.392 143.506C182.764 143.242 182.95 142.888 182.95 142.444C182.95 142.12 182.884 141.862 182.752 141.67C182.62 141.466 182.392 141.292 182.068 141.148C181.744 140.992 181.27 140.83 180.646 140.662C179.638 140.398 178.906 140.044 178.45 139.6C178.006 139.156 177.784 138.592 177.784 137.908C177.784 137.416 177.928 136.972 178.216 136.576C178.516 136.168 178.924 135.856 179.44 135.64C179.968 135.412 180.556 135.298 181.204 135.298ZM191.82 144.568C191.196 145 190.488 145.216 189.696 145.216C188.892 145.216 188.262 144.988 187.806 144.532C187.362 144.064 187.14 143.392 187.14 142.516V136.792H185.484V135.514H187.14V133.372L188.796 133.174V135.514H191.046L190.866 136.792H188.796V142.444C188.796 142.936 188.88 143.296 189.048 143.524C189.228 143.74 189.522 143.848 189.93 143.848C190.302 143.848 190.722 143.722 191.19 143.47L191.82 144.568ZM200.874 135.298C201.522 135.298 202.104 135.388 202.62 135.568C203.136 135.748 203.628 136.018 204.096 136.378L203.394 137.422C202.962 137.146 202.548 136.942 202.152 136.81C201.768 136.678 201.36 136.612 200.928 136.612C200.388 136.612 199.962 136.726 199.65 136.954C199.338 137.17 199.182 137.47 199.182 137.854C199.182 138.238 199.326 138.538 199.614 138.754C199.914 138.97 200.448 139.18 201.216 139.384C202.272 139.648 203.058 140.008 203.574 140.464C204.102 140.92 204.366 141.544 204.366 142.336C204.366 143.272 204 143.986 203.268 144.478C202.548 144.97 201.666 145.216 200.622 145.216C199.182 145.216 197.988 144.802 197.04 143.974L197.922 142.966C198.726 143.578 199.614 143.884 200.586 143.884C201.21 143.884 201.702 143.758 202.062 143.506C202.434 143.242 202.62 142.888 202.62 142.444C202.62 142.12 202.554 141.862 202.422 141.67C202.29 141.466 202.062 141.292 201.738 141.148C201.414 140.992 200.94 140.83 200.316 140.662C199.308 140.398 198.576 140.044 198.12 139.6C197.676 139.156 197.454 138.592 197.454 137.908C197.454 137.416 197.598 136.972 197.886 136.576C198.186 136.168 198.594 135.856 199.11 135.64C199.638 135.412 200.226 135.298 200.874 135.298ZM211.49 144.568C210.866 145 210.158 145.216 209.366 145.216C208.562 145.216 207.932 144.988 207.476 144.532C207.032 144.064 206.81 143.392 206.81 142.516V136.792H205.154V135.514H206.81V133.372L208.466 133.174V135.514H210.716L210.536 136.792H208.466V142.444C208.466 142.936 208.55 143.296 208.718 143.524C208.898 143.74 209.192 143.848 209.6 143.848C209.972 143.848 210.392 143.722 210.86 143.47L211.49 144.568ZM219.473 142.786C219.473 143.17 219.539 143.458 219.671 143.65C219.803 143.83 220.001 143.968 220.265 144.064L219.887 145.216C219.395 145.156 218.999 145.018 218.699 144.802C218.399 144.586 218.177 144.25 218.033 143.794C217.397 144.742 216.455 145.216 215.207 145.216C214.271 145.216 213.533 144.952 212.993 144.424C212.453 143.896 212.183 143.206 212.183 142.354C212.183 141.346 212.543 140.572 213.263 140.032C213.995 139.492 215.027 139.222 216.359 139.222H217.817V138.52C217.817 137.848 217.655 137.368 217.331 137.08C217.007 136.792 216.509 136.648 215.837 136.648C215.141 136.648 214.289 136.816 213.281 137.152L212.867 135.946C214.043 135.514 215.135 135.298 216.143 135.298C217.259 135.298 218.093 135.574 218.645 136.126C219.197 136.666 219.473 137.44 219.473 138.448V142.786ZM215.585 143.974C216.533 143.974 217.277 143.482 217.817 142.498V140.32H216.575C214.823 140.32 213.947 140.968 213.947 142.264C213.947 142.828 214.085 143.254 214.361 143.542C214.637 143.83 215.045 143.974 215.585 143.974ZM226.996 135.298C227.332 135.298 227.644 135.334 227.932 135.406L227.626 137.026C227.338 136.954 227.062 136.918 226.798 136.918C226.21 136.918 225.736 137.134 225.376 137.566C225.016 137.998 224.734 138.67 224.53 139.582V145H222.874V135.514H224.296L224.458 137.44C224.71 136.732 225.052 136.198 225.484 135.838C225.916 135.478 226.42 135.298 226.996 135.298ZM239.369 144.568C238.745 145 238.037 145.216 237.245 145.216C236.441 145.216 235.811 144.988 235.355 144.532C234.911 144.064 234.689 143.392 234.689 142.516V136.792H233.033V135.514H234.689V133.372L236.345 133.174V135.514H238.595L238.415 136.792H236.345V142.444C236.345 142.936 236.429 143.296 236.597 143.524C236.777 143.74 237.071 143.848 237.479 143.848C237.851 143.848 238.271 143.722 238.739 143.47L239.369 144.568ZM244.385 135.298C245.717 135.298 246.749 135.742 247.481 136.63C248.225 137.518 248.597 138.724 248.597 140.248C248.597 141.232 248.429 142.102 248.093 142.858C247.757 143.602 247.271 144.184 246.635 144.604C245.999 145.012 245.243 145.216 244.367 145.216C243.035 145.216 241.997 144.772 241.253 143.884C240.509 142.996 240.137 141.79 240.137 140.266C240.137 139.282 240.305 138.418 240.641 137.674C240.977 136.918 241.463 136.336 242.099 135.928C242.735 135.508 243.497 135.298 244.385 135.298ZM244.385 136.63C242.741 136.63 241.919 137.842 241.919 140.266C241.919 142.678 242.735 143.884 244.367 143.884C245.999 143.884 246.815 142.672 246.815 140.248C246.815 137.836 246.005 136.63 244.385 136.63ZM260.885 144.568C260.261 145 259.553 145.216 258.761 145.216C257.957 145.216 257.327 144.988 256.871 144.532C256.427 144.064 256.205 143.392 256.205 142.516V136.792H254.549V135.514H256.205V133.372L257.861 133.174V135.514H260.111L259.931 136.792H257.861V142.444C257.861 142.936 257.945 143.296 258.113 143.524C258.293 143.74 258.587 143.848 258.995 143.848C259.367 143.848 259.787 143.722 260.255 143.47L260.885 144.568ZM267.065 135.298C267.929 135.298 268.601 135.556 269.081 136.072C269.573 136.588 269.819 137.296 269.819 138.196V145H268.163V138.43C268.163 137.758 268.031 137.284 267.767 137.008C267.515 136.732 267.143 136.594 266.651 136.594C266.159 136.594 265.721 136.738 265.337 137.026C264.953 137.314 264.593 137.722 264.257 138.25V145H262.601V131.716L264.257 131.536V136.828C265.001 135.808 265.937 135.298 267.065 135.298ZM280.312 139.978C280.312 140.254 280.3 140.536 280.276 140.824H274.228C274.3 141.868 274.564 142.636 275.02 143.128C275.476 143.62 276.064 143.866 276.784 143.866C277.24 143.866 277.66 143.8 278.044 143.668C278.428 143.536 278.83 143.326 279.25 143.038L279.97 144.028C278.962 144.82 277.858 145.216 276.658 145.216C275.338 145.216 274.306 144.784 273.562 143.92C272.83 143.056 272.464 141.868 272.464 140.356C272.464 139.372 272.62 138.502 272.932 137.746C273.256 136.978 273.712 136.378 274.3 135.946C274.9 135.514 275.602 135.298 276.406 135.298C277.666 135.298 278.632 135.712 279.304 136.54C279.976 137.368 280.312 138.514 280.312 139.978ZM278.674 139.492C278.674 138.556 278.488 137.842 278.116 137.35C277.744 136.858 277.186 136.612 276.442 136.612C275.086 136.612 274.348 137.608 274.228 139.6H278.674V139.492ZM290.87 132.382C291.698 132.382 292.406 132.502 292.994 132.742C293.582 132.97 294.152 133.33 294.704 133.822L293.768 134.866C293.3 134.494 292.838 134.224 292.382 134.056C291.938 133.876 291.458 133.786 290.942 133.786C290.294 133.786 289.76 133.936 289.34 134.236C288.92 134.536 288.71 134.974 288.71 135.55C288.71 135.91 288.782 136.216 288.926 136.468C289.07 136.708 289.334 136.93 289.718 137.134C290.114 137.338 290.684 137.554 291.428 137.782C292.208 138.022 292.856 138.28 293.372 138.556C293.888 138.832 294.302 139.216 294.614 139.708C294.938 140.188 295.1 140.8 295.1 141.544C295.1 142.264 294.92 142.9 294.56 143.452C294.212 144.004 293.702 144.436 293.03 144.748C292.37 145.06 291.584 145.216 290.672 145.216C288.956 145.216 287.552 144.682 286.46 143.614L287.396 142.57C287.9 142.978 288.41 143.29 288.926 143.506C289.442 143.71 290.018 143.812 290.654 143.812C291.422 143.812 292.058 143.626 292.562 143.254C293.066 142.87 293.318 142.318 293.318 141.598C293.318 141.19 293.24 140.854 293.084 140.59C292.928 140.314 292.658 140.068 292.274 139.852C291.902 139.636 291.356 139.42 290.636 139.204C289.364 138.82 288.434 138.358 287.846 137.818C287.258 137.278 286.964 136.546 286.964 135.622C286.964 134.998 287.126 134.44 287.45 133.948C287.786 133.456 288.248 133.072 288.836 132.796C289.436 132.52 290.114 132.382 290.87 132.382ZM304.584 145H303.162L303.036 143.524C302.676 144.112 302.262 144.544 301.794 144.82C301.326 145.084 300.756 145.216 300.084 145.216C299.256 145.216 298.608 144.964 298.14 144.46C297.672 143.956 297.438 143.242 297.438 142.318V135.514H299.094V142.138C299.094 142.786 299.208 143.248 299.436 143.524C299.664 143.788 300.036 143.92 300.552 143.92C301.476 143.92 302.268 143.374 302.928 142.282V135.514H304.584V145ZM312.469 135.298C313.333 135.298 314.005 135.556 314.485 136.072C314.977 136.588 315.223 137.296 315.223 138.196V145H313.567V138.43C313.567 137.758 313.441 137.284 313.189 137.008C312.937 136.732 312.565 136.594 312.073 136.594C311.569 136.594 311.125 136.738 310.741 137.026C310.357 137.314 309.997 137.728 309.661 138.268V145H308.005V135.514H309.427L309.571 136.918C309.907 136.414 310.321 136.018 310.813 135.73C311.317 135.442 311.869 135.298 312.469 135.298Z\",\n  fill: \"black\"\n});\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 80.5,\n  width: 479,\n  height: 39,\n  fill: \"#FF9191\",\n  stroke: \"black\"\n});\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24.104 92.778C24.824 92.778 25.454 92.922 25.994 93.21C26.546 93.498 26.972 93.894 27.272 94.398C27.572 94.89 27.722 95.448 27.722 96.072C27.722 96.804 27.554 97.506 27.218 98.178C26.894 98.85 26.39 99.576 25.706 100.356C25.022 101.136 23.984 102.222 22.592 103.614H28.01L27.812 105H20.702V103.686C22.31 102.018 23.45 100.8 24.122 100.032C24.794 99.252 25.274 98.574 25.562 97.998C25.85 97.422 25.994 96.804 25.994 96.144C25.994 95.52 25.814 95.034 25.454 94.686C25.094 94.326 24.614 94.146 24.014 94.146C23.522 94.146 23.09 94.248 22.718 94.452C22.346 94.656 21.95 94.992 21.53 95.46L20.45 94.596C20.942 93.984 21.488 93.528 22.088 93.228C22.688 92.928 23.36 92.778 24.104 92.778ZM31.0541 102.714C31.4141 102.714 31.7141 102.834 31.9541 103.074C32.1941 103.314 32.3141 103.608 32.3141 103.956C32.3141 104.304 32.1941 104.604 31.9541 104.856C31.7141 105.096 31.4141 105.216 31.0541 105.216C30.7061 105.216 30.4121 105.096 30.1721 104.856C29.9321 104.604 29.8121 104.304 29.8121 103.956C29.8121 103.608 29.9321 103.314 30.1721 103.074C30.4121 102.834 30.7061 102.714 31.0541 102.714ZM46.2737 92.598V103.506H51.3677L51.1697 105H44.5637V92.598H46.2737ZM55.0945 95.514V105H53.4385V95.514H55.0945ZM54.2485 90.96C54.5965 90.96 54.8785 91.068 55.0945 91.284C55.3105 91.5 55.4185 91.77 55.4185 92.094C55.4185 92.418 55.3105 92.688 55.0945 92.904C54.8785 93.108 54.5965 93.21 54.2485 93.21C53.9125 93.21 53.6365 93.108 53.4205 92.904C53.2045 92.688 53.0965 92.418 53.0965 92.094C53.0965 91.77 53.2045 91.5 53.4205 91.284C53.6365 91.068 53.9125 90.96 54.2485 90.96ZM61.0926 95.298C61.7406 95.298 62.3226 95.388 62.8386 95.568C63.3546 95.748 63.8466 96.018 64.3146 96.378L63.6126 97.422C63.1806 97.146 62.7666 96.942 62.3706 96.81C61.9866 96.678 61.5786 96.612 61.1466 96.612C60.6066 96.612 60.1806 96.726 59.8686 96.954C59.5566 97.17 59.4006 97.47 59.4006 97.854C59.4006 98.238 59.5446 98.538 59.8326 98.754C60.1326 98.97 60.6666 99.18 61.4346 99.384C62.4906 99.648 63.2766 100.008 63.7926 100.464C64.3206 100.92 64.5846 101.544 64.5846 102.336C64.5846 103.272 64.2186 103.986 63.4866 104.478C62.7666 104.97 61.8846 105.216 60.8406 105.216C59.4006 105.216 58.2066 104.802 57.2586 103.974L58.1406 102.966C58.9446 103.578 59.8326 103.884 60.8046 103.884C61.4286 103.884 61.9206 103.758 62.2806 103.506C62.6526 103.242 62.8386 102.888 62.8386 102.444C62.8386 102.12 62.7726 101.862 62.6406 101.67C62.5086 101.466 62.2806 101.292 61.9566 101.148C61.6326 100.992 61.1586 100.83 60.5346 100.662C59.5266 100.398 58.7946 100.044 58.3386 99.6C57.8946 99.156 57.6726 98.592 57.6726 97.908C57.6726 97.416 57.8166 96.972 58.1046 96.576C58.4046 96.168 58.8126 95.856 59.3286 95.64C59.8566 95.412 60.4446 95.298 61.0926 95.298ZM71.7089 104.568C71.0849 105 70.3769 105.216 69.5849 105.216C68.7809 105.216 68.1509 104.988 67.6949 104.532C67.2509 104.064 67.0289 103.392 67.0289 102.516V96.792H65.3729V95.514H67.0289V93.372L68.6849 93.174V95.514H70.9349L70.7549 96.792H68.6849V102.444C68.6849 102.936 68.7689 103.296 68.9369 103.524C69.1169 103.74 69.4109 103.848 69.8189 103.848C70.1909 103.848 70.6109 103.722 71.0789 103.47L71.7089 104.568ZM82.9765 104.568C82.3525 105 81.6445 105.216 80.8525 105.216C80.0485 105.216 79.4185 104.988 78.9625 104.532C78.5185 104.064 78.2965 103.392 78.2965 102.516V96.792H76.6405V95.514H78.2965V93.372L79.9525 93.174V95.514H82.2025L82.0225 96.792H79.9525V102.444C79.9525 102.936 80.0365 103.296 80.2045 103.524C80.3845 103.74 80.6785 103.848 81.0865 103.848C81.4585 103.848 81.8785 103.722 82.3465 103.47L82.9765 104.568ZM89.1564 95.298C90.0204 95.298 90.6924 95.556 91.1724 96.072C91.6644 96.588 91.9104 97.296 91.9104 98.196V105H90.2544V98.43C90.2544 97.758 90.1224 97.284 89.8584 97.008C89.6064 96.732 89.2344 96.594 88.7424 96.594C88.2504 96.594 87.8124 96.738 87.4284 97.026C87.0444 97.314 86.6844 97.722 86.3484 98.25V105H84.6924V91.716L86.3484 91.536V96.828C87.0924 95.808 88.0284 95.298 89.1564 95.298ZM102.403 99.978C102.403 100.254 102.391 100.536 102.367 100.824H96.3193C96.3913 101.868 96.6553 102.636 97.1113 103.128C97.5673 103.62 98.1553 103.866 98.8753 103.866C99.3313 103.866 99.7513 103.8 100.135 103.668C100.519 103.536 100.921 103.326 101.341 103.038L102.061 104.028C101.053 104.82 99.9493 105.216 98.7493 105.216C97.4293 105.216 96.3973 104.784 95.6533 103.92C94.9213 103.056 94.5553 101.868 94.5553 100.356C94.5553 99.372 94.7113 98.502 95.0233 97.746C95.3473 96.978 95.8033 96.378 96.3913 95.946C96.9913 95.514 97.6933 95.298 98.4973 95.298C99.7573 95.298 100.723 95.712 101.395 96.54C102.067 97.368 102.403 98.514 102.403 99.978ZM100.765 99.492C100.765 98.556 100.579 97.842 100.207 97.35C99.8353 96.858 99.2773 96.612 98.5333 96.612C97.1773 96.612 96.4393 97.608 96.3193 99.6H100.765V99.492ZM119.334 95.298C120.114 95.298 120.738 95.562 121.206 96.09C121.674 96.606 121.908 97.308 121.908 98.196V105H120.252V98.43C120.252 97.206 119.808 96.594 118.92 96.594C118.452 96.594 118.056 96.732 117.732 97.008C117.408 97.272 117.06 97.692 116.688 98.268V105H115.032V98.43C115.032 97.206 114.588 96.594 113.7 96.594C113.22 96.594 112.818 96.732 112.494 97.008C112.17 97.284 111.828 97.704 111.468 98.268V105H109.812V95.514H111.234L111.378 96.9C112.086 95.832 112.998 95.298 114.114 95.298C114.702 95.298 115.2 95.448 115.608 95.748C116.028 96.048 116.328 96.468 116.508 97.008C116.88 96.456 117.288 96.036 117.732 95.748C118.188 95.448 118.722 95.298 119.334 95.298ZM128.809 95.298C130.141 95.298 131.173 95.742 131.905 96.63C132.649 97.518 133.021 98.724 133.021 100.248C133.021 101.232 132.853 102.102 132.517 102.858C132.181 103.602 131.695 104.184 131.059 104.604C130.423 105.012 129.667 105.216 128.791 105.216C127.459 105.216 126.421 104.772 125.677 103.884C124.933 102.996 124.561 101.79 124.561 100.266C124.561 99.282 124.729 98.418 125.065 97.674C125.401 96.918 125.887 96.336 126.523 95.928C127.159 95.508 127.921 95.298 128.809 95.298ZM128.809 96.63C127.165 96.63 126.343 97.842 126.343 100.266C126.343 102.678 127.159 103.884 128.791 103.884C130.423 103.884 131.239 102.672 131.239 100.248C131.239 97.836 130.429 96.63 128.809 96.63ZM139.321 95.298C140.653 95.298 141.685 95.742 142.417 96.63C143.161 97.518 143.533 98.724 143.533 100.248C143.533 101.232 143.365 102.102 143.029 102.858C142.693 103.602 142.207 104.184 141.571 104.604C140.935 105.012 140.179 105.216 139.303 105.216C137.971 105.216 136.933 104.772 136.189 103.884C135.445 102.996 135.073 101.79 135.073 100.266C135.073 99.282 135.241 98.418 135.577 97.674C135.913 96.918 136.399 96.336 137.035 95.928C137.671 95.508 138.433 95.298 139.321 95.298ZM139.321 96.63C137.677 96.63 136.855 97.842 136.855 100.266C136.855 102.678 137.671 103.884 139.303 103.884C140.935 103.884 141.751 102.672 141.751 100.248C141.751 97.836 140.941 96.63 139.321 96.63ZM150.733 95.298C151.597 95.298 152.269 95.556 152.749 96.072C153.241 96.588 153.487 97.296 153.487 98.196V105H151.831V98.43C151.831 97.758 151.705 97.284 151.453 97.008C151.201 96.732 150.829 96.594 150.337 96.594C149.833 96.594 149.389 96.738 149.005 97.026C148.621 97.314 148.261 97.728 147.925 98.268V105H146.269V95.514H147.691L147.835 96.918C148.171 96.414 148.585 96.018 149.077 95.73C149.581 95.442 150.133 95.298 150.733 95.298ZM159.389 95.298C160.037 95.298 160.619 95.388 161.135 95.568C161.651 95.748 162.143 96.018 162.611 96.378L161.909 97.422C161.477 97.146 161.063 96.942 160.667 96.81C160.283 96.678 159.875 96.612 159.443 96.612C158.903 96.612 158.477 96.726 158.165 96.954C157.853 97.17 157.697 97.47 157.697 97.854C157.697 98.238 157.841 98.538 158.129 98.754C158.429 98.97 158.963 99.18 159.731 99.384C160.787 99.648 161.573 100.008 162.089 100.464C162.617 100.92 162.881 101.544 162.881 102.336C162.881 103.272 162.515 103.986 161.783 104.478C161.063 104.97 160.181 105.216 159.137 105.216C157.697 105.216 156.503 104.802 155.555 103.974L156.437 102.966C157.241 103.578 158.129 103.884 159.101 103.884C159.725 103.884 160.217 103.758 160.577 103.506C160.949 103.242 161.135 102.888 161.135 102.444C161.135 102.12 161.069 101.862 160.937 101.67C160.805 101.466 160.577 101.292 160.253 101.148C159.929 100.992 159.455 100.83 158.831 100.662C157.823 100.398 157.091 100.044 156.635 99.6C156.191 99.156 155.969 98.592 155.969 97.908C155.969 97.416 156.113 96.972 156.401 96.576C156.701 96.168 157.109 95.856 157.625 95.64C158.153 95.412 158.741 95.298 159.389 95.298ZM173.545 95.298C174.877 95.298 175.909 95.742 176.641 96.63C177.385 97.518 177.757 98.724 177.757 100.248C177.757 101.232 177.589 102.102 177.253 102.858C176.917 103.602 176.431 104.184 175.795 104.604C175.159 105.012 174.403 105.216 173.527 105.216C172.195 105.216 171.157 104.772 170.413 103.884C169.669 102.996 169.297 101.79 169.297 100.266C169.297 99.282 169.465 98.418 169.801 97.674C170.137 96.918 170.623 96.336 171.259 95.928C171.895 95.508 172.657 95.298 173.545 95.298ZM173.545 96.63C171.901 96.63 171.079 97.842 171.079 100.266C171.079 102.678 171.895 103.884 173.527 103.884C175.159 103.884 175.975 102.672 175.975 100.248C175.975 97.836 175.165 96.63 173.545 96.63ZM183.715 92.832C183.211 92.832 182.851 92.946 182.635 93.174C182.419 93.39 182.311 93.732 182.311 94.2V95.514H184.615L184.435 96.792H182.311V105H180.655V96.792H178.963V95.514H180.655V94.218C180.655 93.402 180.913 92.748 181.429 92.256C181.957 91.752 182.689 91.5 183.625 91.5C184.057 91.5 184.441 91.542 184.777 91.626C185.125 91.698 185.497 91.818 185.893 91.986L185.371 93.192C184.831 92.952 184.279 92.832 183.715 92.832ZM202.464 105H200.808L200.376 99.402C200.196 97.206 200.094 95.52 200.07 94.344L197.388 103.596H195.786L192.96 94.326C192.96 95.826 192.882 97.56 192.726 99.528L192.312 105H190.692L191.718 92.598H194.022L196.632 101.616L199.116 92.598H201.438L202.464 105ZM211.686 102.786C211.686 103.17 211.752 103.458 211.884 103.65C212.016 103.83 212.214 103.968 212.478 104.064L212.1 105.216C211.608 105.156 211.212 105.018 210.912 104.802C210.612 104.586 210.39 104.25 210.246 103.794C209.61 104.742 208.668 105.216 207.42 105.216C206.484 105.216 205.746 104.952 205.206 104.424C204.666 103.896 204.396 103.206 204.396 102.354C204.396 101.346 204.756 100.572 205.476 100.032C206.208 99.492 207.24 99.222 208.572 99.222H210.03V98.52C210.03 97.848 209.868 97.368 209.544 97.08C209.22 96.792 208.722 96.648 208.05 96.648C207.354 96.648 206.502 96.816 205.494 97.152L205.08 95.946C206.256 95.514 207.348 95.298 208.356 95.298C209.472 95.298 210.306 95.574 210.858 96.126C211.41 96.666 211.686 97.44 211.686 98.448V102.786ZM207.798 103.974C208.746 103.974 209.49 103.482 210.03 102.498V100.32H208.788C207.036 100.32 206.16 100.968 206.16 102.264C206.16 102.828 206.298 103.254 206.574 103.542C206.85 103.83 207.258 103.974 207.798 103.974ZM219.209 95.298C219.545 95.298 219.857 95.334 220.145 95.406L219.839 97.026C219.551 96.954 219.275 96.918 219.011 96.918C218.423 96.918 217.949 97.134 217.589 97.566C217.229 97.998 216.947 98.67 216.743 99.582V105H215.087V95.514H216.509L216.671 97.44C216.923 96.732 217.265 96.198 217.697 95.838C218.129 95.478 218.633 95.298 219.209 95.298ZM224.341 95.298C224.989 95.298 225.571 95.388 226.087 95.568C226.603 95.748 227.095 96.018 227.563 96.378L226.861 97.422C226.429 97.146 226.015 96.942 225.619 96.81C225.235 96.678 224.827 96.612 224.395 96.612C223.855 96.612 223.429 96.726 223.117 96.954C222.805 97.17 222.649 97.47 222.649 97.854C222.649 98.238 222.793 98.538 223.081 98.754C223.381 98.97 223.915 99.18 224.683 99.384C225.739 99.648 226.525 100.008 227.041 100.464C227.569 100.92 227.833 101.544 227.833 102.336C227.833 103.272 227.467 103.986 226.735 104.478C226.015 104.97 225.133 105.216 224.089 105.216C222.649 105.216 221.455 104.802 220.507 103.974L221.389 102.966C222.193 103.578 223.081 103.884 224.053 103.884C224.677 103.884 225.169 103.758 225.529 103.506C225.901 103.242 226.087 102.888 226.087 102.444C226.087 102.12 226.021 101.862 225.889 101.67C225.757 101.466 225.529 101.292 225.205 101.148C224.881 100.992 224.407 100.83 223.783 100.662C222.775 100.398 222.043 100.044 221.587 99.6C221.143 99.156 220.921 98.592 220.921 97.908C220.921 97.416 221.065 96.972 221.353 96.576C221.653 96.168 222.061 95.856 222.577 95.64C223.105 95.412 223.693 95.298 224.341 95.298Z\",\n  fill: \"black\"\n});\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 40.5,\n  width: 479,\n  height: 39,\n  fill: \"#CAFFB7\",\n  stroke: \"black\"\n});\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M25.814 53.958V66H24.158V55.722L21.35 57.432L20.63 56.262L24.356 53.958H25.814ZM29.9291 63.714C30.2891 63.714 30.5891 63.834 30.8291 64.074C31.0691 64.314 31.1891 64.608 31.1891 64.956C31.1891 65.304 31.0691 65.604 30.8291 65.856C30.5891 66.096 30.2891 66.216 29.9291 66.216C29.5811 66.216 29.2871 66.096 29.0471 65.856C28.8071 65.604 28.6871 65.304 28.6871 64.956C28.6871 64.608 28.8071 64.314 29.0471 64.074C29.2871 63.834 29.5811 63.714 29.9291 63.714ZM45.605 66V60.186H40.385V66H38.675V53.598H40.385V58.782H45.605V53.598H47.315V66H45.605ZM54.3834 56.298C55.7154 56.298 56.7474 56.742 57.4794 57.63C58.2234 58.518 58.5954 59.724 58.5954 61.248C58.5954 62.232 58.4274 63.102 58.0914 63.858C57.7554 64.602 57.2694 65.184 56.6334 65.604C55.9974 66.012 55.2414 66.216 54.3654 66.216C53.0334 66.216 51.9954 65.772 51.2514 64.884C50.5074 63.996 50.1354 62.79 50.1354 61.266C50.1354 60.282 50.3034 59.418 50.6394 58.674C50.9754 57.918 51.4614 57.336 52.0974 56.928C52.7334 56.508 53.4954 56.298 54.3834 56.298ZM54.3834 57.63C52.7394 57.63 51.9174 58.842 51.9174 61.266C51.9174 63.678 52.7334 64.884 54.3654 64.884C55.9974 64.884 56.8134 63.672 56.8134 61.248C56.8134 58.836 56.0034 57.63 54.3834 57.63ZM72.1671 56.514L70.0071 66H67.7571L66.1011 58.008L64.3911 66H62.1951L59.9811 56.514H61.6371L63.3471 64.848L65.2191 56.514H67.0731L68.8551 64.848L70.5831 56.514H72.1671ZM82.2191 53.832C81.7151 53.832 81.3551 53.946 81.1391 54.174C80.9231 54.39 80.8151 54.732 80.8151 55.2V56.514H83.1191L82.9391 57.792H80.8151V66H79.1591V57.792H77.4671V56.514H79.1591V55.218C79.1591 54.402 79.4171 53.748 79.9331 53.256C80.4611 52.752 81.1931 52.5 82.1291 52.5C82.5611 52.5 82.9451 52.542 83.2811 52.626C83.6291 52.698 84.0011 52.818 84.3971 52.986L83.8751 54.192C83.3351 53.952 82.7831 53.832 82.2191 53.832ZM91.0121 63.786C91.0121 64.17 91.0781 64.458 91.2101 64.65C91.3421 64.83 91.5401 64.968 91.8041 65.064L91.4261 66.216C90.9341 66.156 90.5381 66.018 90.2381 65.802C89.9381 65.586 89.7161 65.25 89.5721 64.794C88.9361 65.742 87.9941 66.216 86.7461 66.216C85.8101 66.216 85.0721 65.952 84.5321 65.424C83.9921 64.896 83.7221 64.206 83.7221 63.354C83.7221 62.346 84.0821 61.572 84.8021 61.032C85.5341 60.492 86.5661 60.222 87.8981 60.222H89.3561V59.52C89.3561 58.848 89.1941 58.368 88.8701 58.08C88.5461 57.792 88.0481 57.648 87.3761 57.648C86.6801 57.648 85.8281 57.816 84.8201 58.152L84.4061 56.946C85.5821 56.514 86.6741 56.298 87.6821 56.298C88.7981 56.298 89.6321 56.574 90.1841 57.126C90.7361 57.666 91.0121 58.44 91.0121 59.448V63.786ZM87.1241 64.974C88.0721 64.974 88.8161 64.482 89.3561 63.498V61.32H88.1141C86.3621 61.32 85.4861 61.968 85.4861 63.264C85.4861 63.828 85.6241 64.254 85.9001 64.542C86.1761 64.83 86.5841 64.974 87.1241 64.974ZM98.5351 56.298C98.8711 56.298 99.1831 56.334 99.4711 56.406L99.1651 58.026C98.8771 57.954 98.6011 57.918 98.3371 57.918C97.7491 57.918 97.2751 58.134 96.9151 58.566C96.5551 58.998 96.2731 59.67 96.0691 60.582V66H94.4131V56.514H95.8351L95.9971 58.44C96.2491 57.732 96.5911 57.198 97.0231 56.838C97.4551 56.478 97.9591 56.298 98.5351 56.298ZM112.51 63.786C112.51 64.17 112.576 64.458 112.708 64.65C112.84 64.83 113.038 64.968 113.302 65.064L112.924 66.216C112.432 66.156 112.036 66.018 111.736 65.802C111.436 65.586 111.214 65.25 111.07 64.794C110.434 65.742 109.492 66.216 108.244 66.216C107.308 66.216 106.57 65.952 106.03 65.424C105.49 64.896 105.22 64.206 105.22 63.354C105.22 62.346 105.58 61.572 106.3 61.032C107.032 60.492 108.064 60.222 109.396 60.222H110.854V59.52C110.854 58.848 110.692 58.368 110.368 58.08C110.044 57.792 109.546 57.648 108.874 57.648C108.178 57.648 107.326 57.816 106.318 58.152L105.904 56.946C107.08 56.514 108.172 56.298 109.18 56.298C110.296 56.298 111.13 56.574 111.682 57.126C112.234 57.666 112.51 58.44 112.51 59.448V63.786ZM108.622 64.974C109.57 64.974 110.314 64.482 110.854 63.498V61.32H109.612C107.86 61.32 106.984 61.968 106.984 63.264C106.984 63.828 107.122 64.254 107.398 64.542C107.674 64.83 108.082 64.974 108.622 64.974ZM126.659 56.514L124.499 66H122.249L120.593 58.008L118.883 66H116.687L114.473 56.514H116.129L117.839 64.848L119.711 56.514H121.565L123.347 64.848L125.075 56.514H126.659ZM134.905 63.786C134.905 64.17 134.971 64.458 135.103 64.65C135.235 64.83 135.433 64.968 135.697 65.064L135.319 66.216C134.827 66.156 134.431 66.018 134.131 65.802C133.831 65.586 133.609 65.25 133.465 64.794C132.829 65.742 131.887 66.216 130.639 66.216C129.703 66.216 128.965 65.952 128.425 65.424C127.885 64.896 127.615 64.206 127.615 63.354C127.615 62.346 127.975 61.572 128.695 61.032C129.427 60.492 130.459 60.222 131.791 60.222H133.249V59.52C133.249 58.848 133.087 58.368 132.763 58.08C132.439 57.792 131.941 57.648 131.269 57.648C130.573 57.648 129.721 57.816 128.713 58.152L128.299 56.946C129.475 56.514 130.567 56.298 131.575 56.298C132.691 56.298 133.525 56.574 134.077 57.126C134.629 57.666 134.905 58.44 134.905 59.448V63.786ZM131.017 64.974C131.965 64.974 132.709 64.482 133.249 63.498V61.32H132.007C130.255 61.32 129.379 61.968 129.379 63.264C129.379 63.828 129.517 64.254 129.793 64.542C130.069 64.83 130.477 64.974 131.017 64.974ZM141.84 66.054C141.468 67.158 140.946 68.028 140.274 68.664C139.614 69.312 138.666 69.702 137.43 69.834L137.25 68.538C137.874 68.43 138.372 68.274 138.744 68.07C139.116 67.866 139.41 67.602 139.626 67.278C139.854 66.966 140.064 66.54 140.256 66H139.698L136.512 56.514H138.276L140.814 64.794L143.298 56.514H145.008L141.84 66.054ZM154.887 53.832C154.383 53.832 154.023 53.946 153.807 54.174C153.591 54.39 153.483 54.732 153.483 55.2V56.514H155.787L155.607 57.792H153.483V66H151.827V57.792H150.135V56.514H151.827V55.218C151.827 54.402 152.085 53.748 152.601 53.256C153.129 52.752 153.861 52.5 154.797 52.5C155.229 52.5 155.613 52.542 155.949 52.626C156.297 52.698 156.669 52.818 157.065 52.986L156.543 54.192C156.003 53.952 155.451 53.832 154.887 53.832ZM161.816 56.298C162.152 56.298 162.464 56.334 162.752 56.406L162.446 58.026C162.158 57.954 161.882 57.918 161.618 57.918C161.03 57.918 160.556 58.134 160.196 58.566C159.836 58.998 159.554 59.67 159.35 60.582V66H157.694V56.514H159.116L159.278 58.44C159.53 57.732 159.872 57.198 160.304 56.838C160.736 56.478 161.24 56.298 161.816 56.298ZM167.657 56.298C168.989 56.298 170.021 56.742 170.753 57.63C171.497 58.518 171.869 59.724 171.869 61.248C171.869 62.232 171.701 63.102 171.365 63.858C171.029 64.602 170.543 65.184 169.907 65.604C169.271 66.012 168.515 66.216 167.639 66.216C166.307 66.216 165.269 65.772 164.525 64.884C163.781 63.996 163.409 62.79 163.409 61.266C163.409 60.282 163.577 59.418 163.913 58.674C164.249 57.918 164.735 57.336 165.371 56.928C166.007 56.508 166.769 56.298 167.657 56.298ZM167.657 57.63C166.013 57.63 165.191 58.842 165.191 61.266C165.191 63.678 166.007 64.884 167.639 64.884C169.271 64.884 170.087 63.672 170.087 61.248C170.087 58.836 169.277 57.63 167.657 57.63ZM184.127 56.298C184.907 56.298 185.531 56.562 185.999 57.09C186.467 57.606 186.701 58.308 186.701 59.196V66H185.045V59.43C185.045 58.206 184.601 57.594 183.713 57.594C183.245 57.594 182.849 57.732 182.525 58.008C182.201 58.272 181.853 58.692 181.481 59.268V66H179.825V59.43C179.825 58.206 179.381 57.594 178.493 57.594C178.013 57.594 177.611 57.732 177.287 58.008C176.963 58.284 176.621 58.704 176.261 59.268V66H174.605V56.514H176.027L176.171 57.9C176.879 56.832 177.791 56.298 178.907 56.298C179.495 56.298 179.993 56.448 180.401 56.748C180.821 57.048 181.121 57.468 181.301 58.008C181.673 57.456 182.081 57.036 182.525 56.748C182.981 56.448 183.515 56.298 184.127 56.298ZM201.606 53.598L201.408 54.966H196.602V59.016H200.778V60.384H196.602V64.632H201.75V66H194.892V53.598H201.606ZM210.614 63.786C210.614 64.17 210.68 64.458 210.812 64.65C210.944 64.83 211.142 64.968 211.406 65.064L211.028 66.216C210.536 66.156 210.14 66.018 209.84 65.802C209.54 65.586 209.318 65.25 209.174 64.794C208.538 65.742 207.596 66.216 206.348 66.216C205.412 66.216 204.674 65.952 204.134 65.424C203.594 64.896 203.324 64.206 203.324 63.354C203.324 62.346 203.684 61.572 204.404 61.032C205.136 60.492 206.168 60.222 207.5 60.222H208.958V59.52C208.958 58.848 208.796 58.368 208.472 58.08C208.148 57.792 207.65 57.648 206.978 57.648C206.282 57.648 205.43 57.816 204.422 58.152L204.008 56.946C205.184 56.514 206.276 56.298 207.284 56.298C208.4 56.298 209.234 56.574 209.786 57.126C210.338 57.666 210.614 58.44 210.614 59.448V63.786ZM206.726 64.974C207.674 64.974 208.418 64.482 208.958 63.498V61.32H207.716C205.964 61.32 205.088 61.968 205.088 63.264C205.088 63.828 205.226 64.254 205.502 64.542C205.778 64.83 206.186 64.974 206.726 64.974ZM218.137 56.298C218.473 56.298 218.785 56.334 219.073 56.406L218.767 58.026C218.479 57.954 218.203 57.918 217.939 57.918C217.351 57.918 216.877 58.134 216.517 58.566C216.157 58.998 215.875 59.67 215.671 60.582V66H214.015V56.514H215.437L215.599 58.44C215.851 57.732 216.193 57.198 216.625 56.838C217.057 56.478 217.561 56.298 218.137 56.298ZM225.746 65.568C225.122 66 224.414 66.216 223.622 66.216C222.818 66.216 222.188 65.988 221.732 65.532C221.288 65.064 221.066 64.392 221.066 63.516V57.792H219.41V56.514H221.066V54.372L222.722 54.174V56.514H224.972L224.792 57.792H222.722V63.444C222.722 63.936 222.806 64.296 222.974 64.524C223.154 64.74 223.448 64.848 223.856 64.848C224.228 64.848 224.648 64.722 225.116 64.47L225.746 65.568ZM231.926 56.298C232.79 56.298 233.462 56.556 233.942 57.072C234.434 57.588 234.68 58.296 234.68 59.196V66H233.024V59.43C233.024 58.758 232.892 58.284 232.628 58.008C232.376 57.732 232.004 57.594 231.512 57.594C231.02 57.594 230.582 57.738 230.198 58.026C229.814 58.314 229.454 58.722 229.118 59.25V66H227.462V52.716L229.118 52.536V57.828C229.862 56.808 230.798 56.298 231.926 56.298ZM244.429 56.514V66H242.773V56.514H244.429ZM243.583 51.96C243.931 51.96 244.213 52.068 244.429 52.284C244.645 52.5 244.753 52.77 244.753 53.094C244.753 53.418 244.645 53.688 244.429 53.904C244.213 54.108 243.931 54.21 243.583 54.21C243.247 54.21 242.971 54.108 242.755 53.904C242.539 53.688 242.431 53.418 242.431 53.094C242.431 52.77 242.539 52.5 242.755 52.284C242.971 52.068 243.247 51.96 243.583 51.96ZM250.427 56.298C251.075 56.298 251.657 56.388 252.173 56.568C252.689 56.748 253.181 57.018 253.649 57.378L252.947 58.422C252.515 58.146 252.101 57.942 251.705 57.81C251.321 57.678 250.913 57.612 250.481 57.612C249.941 57.612 249.515 57.726 249.203 57.954C248.891 58.17 248.735 58.47 248.735 58.854C248.735 59.238 248.879 59.538 249.167 59.754C249.467 59.97 250.001 60.18 250.769 60.384C251.825 60.648 252.611 61.008 253.127 61.464C253.655 61.92 253.919 62.544 253.919 63.336C253.919 64.272 253.553 64.986 252.821 65.478C252.101 65.97 251.219 66.216 250.175 66.216C248.735 66.216 247.541 65.802 246.593 64.974L247.475 63.966C248.279 64.578 249.167 64.884 250.139 64.884C250.763 64.884 251.255 64.758 251.615 64.506C251.987 64.242 252.173 63.888 252.173 63.444C252.173 63.12 252.107 62.862 251.975 62.67C251.843 62.466 251.615 62.292 251.291 62.148C250.967 61.992 250.493 61.83 249.869 61.662C248.861 61.398 248.129 61.044 247.673 60.6C247.229 60.156 247.007 59.592 247.007 58.908C247.007 58.416 247.151 57.972 247.439 57.576C247.739 57.168 248.147 56.856 248.663 56.64C249.191 56.412 249.779 56.298 250.427 56.298ZM272.197 66H270.541L270.109 60.402C269.929 58.206 269.827 56.52 269.803 55.344L267.121 64.596H265.519L262.693 55.326C262.693 56.826 262.615 58.56 262.459 60.528L262.045 66H260.425L261.451 53.598H263.755L266.365 62.616L268.849 53.598H271.171L272.197 66ZM278.592 56.298C279.924 56.298 280.956 56.742 281.688 57.63C282.432 58.518 282.804 59.724 282.804 61.248C282.804 62.232 282.636 63.102 282.3 63.858C281.964 64.602 281.478 65.184 280.842 65.604C280.206 66.012 279.45 66.216 278.574 66.216C277.242 66.216 276.204 65.772 275.46 64.884C274.716 63.996 274.344 62.79 274.344 61.266C274.344 60.282 274.512 59.418 274.848 58.674C275.184 57.918 275.67 57.336 276.306 56.928C276.942 56.508 277.704 56.298 278.592 56.298ZM278.592 57.63C276.948 57.63 276.126 58.842 276.126 61.266C276.126 63.678 276.942 64.884 278.574 64.884C280.206 64.884 281.022 63.672 281.022 61.248C281.022 58.836 280.212 57.63 278.592 57.63ZM289.104 56.298C290.436 56.298 291.468 56.742 292.2 57.63C292.944 58.518 293.316 59.724 293.316 61.248C293.316 62.232 293.148 63.102 292.812 63.858C292.476 64.602 291.99 65.184 291.354 65.604C290.718 66.012 289.962 66.216 289.086 66.216C287.754 66.216 286.716 65.772 285.972 64.884C285.228 63.996 284.856 62.79 284.856 61.266C284.856 60.282 285.024 59.418 285.36 58.674C285.696 57.918 286.182 57.336 286.818 56.928C287.454 56.508 288.216 56.298 289.104 56.298ZM289.104 57.63C287.46 57.63 286.638 58.842 286.638 61.266C286.638 63.678 287.454 64.884 289.086 64.884C290.718 64.884 291.534 63.672 291.534 61.248C291.534 58.836 290.724 57.63 289.104 57.63ZM300.516 56.298C301.38 56.298 302.052 56.556 302.532 57.072C303.024 57.588 303.27 58.296 303.27 59.196V66H301.614V59.43C301.614 58.758 301.488 58.284 301.236 58.008C300.984 57.732 300.612 57.594 300.12 57.594C299.616 57.594 299.172 57.738 298.788 58.026C298.404 58.314 298.044 58.728 297.708 59.268V66H296.052V56.514H297.474L297.618 57.918C297.954 57.414 298.368 57.018 298.86 56.73C299.364 56.442 299.916 56.298 300.516 56.298Z\",\n  fill: \"black\"\n});\n\nvar _ref18 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.5,\n  y: 0.5,\n  width: 479,\n  height: 39,\n  fill: \"white\",\n  stroke: \"black\"\n});\n\nvar _ref19 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M164.577 13.598C166.113 13.598 167.301 13.922 168.141 14.57C168.981 15.206 169.401 16.16 169.401 17.432C169.401 18.788 168.963 19.796 168.087 20.456C167.211 21.116 166.047 21.446 164.595 21.446H163.029V26H161.319V13.598H164.577ZM164.523 20.096C165.519 20.096 166.275 19.904 166.791 19.52C167.319 19.136 167.583 18.446 167.583 17.45C167.583 16.562 167.319 15.92 166.791 15.524C166.275 15.128 165.531 14.93 164.559 14.93H163.029V20.096H164.523ZM175.8 16.298C176.664 16.298 177.336 16.556 177.816 17.072C178.308 17.588 178.554 18.296 178.554 19.196V26H176.898V19.43C176.898 18.758 176.766 18.284 176.502 18.008C176.25 17.732 175.878 17.594 175.386 17.594C174.894 17.594 174.456 17.738 174.072 18.026C173.688 18.314 173.328 18.722 172.992 19.25V26H171.336V12.716L172.992 12.536V17.828C173.736 16.808 174.672 16.298 175.8 16.298ZM185.558 26.054C185.186 27.158 184.664 28.028 183.992 28.664C183.332 29.312 182.384 29.702 181.148 29.834L180.968 28.538C181.592 28.43 182.09 28.274 182.462 28.07C182.834 27.866 183.128 27.602 183.344 27.278C183.572 26.966 183.782 26.54 183.974 26H183.416L180.23 16.514H181.994L184.532 24.794L187.016 16.514H188.726L185.558 26.054ZM193.07 16.298C193.718 16.298 194.3 16.388 194.816 16.568C195.332 16.748 195.824 17.018 196.292 17.378L195.59 18.422C195.158 18.146 194.744 17.942 194.348 17.81C193.964 17.678 193.556 17.612 193.124 17.612C192.584 17.612 192.158 17.726 191.846 17.954C191.534 18.17 191.378 18.47 191.378 18.854C191.378 19.238 191.522 19.538 191.81 19.754C192.11 19.97 192.644 20.18 193.412 20.384C194.468 20.648 195.254 21.008 195.77 21.464C196.298 21.92 196.562 22.544 196.562 23.336C196.562 24.272 196.196 24.986 195.464 25.478C194.744 25.97 193.862 26.216 192.818 26.216C191.378 26.216 190.184 25.802 189.236 24.974L190.118 23.966C190.922 24.578 191.81 24.884 192.782 24.884C193.406 24.884 193.898 24.758 194.258 24.506C194.63 24.242 194.816 23.888 194.816 23.444C194.816 23.12 194.75 22.862 194.618 22.67C194.486 22.466 194.258 22.292 193.934 22.148C193.61 21.992 193.136 21.83 192.512 21.662C191.504 21.398 190.772 21.044 190.316 20.6C189.872 20.156 189.65 19.592 189.65 18.908C189.65 18.416 189.794 17.972 190.082 17.576C190.382 17.168 190.79 16.856 191.306 16.64C191.834 16.412 192.422 16.298 193.07 16.298ZM200.554 16.514V26H198.898V16.514H200.554ZM199.708 11.96C200.056 11.96 200.338 12.068 200.554 12.284C200.77 12.5 200.878 12.77 200.878 13.094C200.878 13.418 200.77 13.688 200.554 13.904C200.338 14.108 200.056 14.21 199.708 14.21C199.372 14.21 199.096 14.108 198.88 13.904C198.664 13.688 198.556 13.418 198.556 13.094C198.556 12.77 198.664 12.5 198.88 12.284C199.096 12.068 199.372 11.96 199.708 11.96ZM207.435 16.298C207.999 16.298 208.515 16.382 208.983 16.55C209.451 16.706 209.901 16.964 210.333 17.324L209.541 18.368C209.205 18.128 208.875 17.954 208.551 17.846C208.239 17.726 207.891 17.666 207.507 17.666C206.739 17.666 206.139 17.972 205.707 18.584C205.287 19.196 205.077 20.102 205.077 21.302C205.077 22.502 205.287 23.39 205.707 23.966C206.127 24.53 206.727 24.812 207.507 24.812C207.879 24.812 208.221 24.758 208.533 24.65C208.845 24.53 209.193 24.344 209.577 24.092L210.333 25.172C209.469 25.868 208.503 26.216 207.435 26.216C206.151 26.216 205.137 25.784 204.393 24.92C203.661 24.056 203.295 22.862 203.295 21.338C203.295 20.33 203.463 19.448 203.799 18.692C204.135 17.936 204.609 17.348 205.221 16.928C205.845 16.508 206.583 16.298 207.435 16.298ZM215.148 16.298C215.796 16.298 216.378 16.388 216.894 16.568C217.41 16.748 217.902 17.018 218.37 17.378L217.668 18.422C217.236 18.146 216.822 17.942 216.426 17.81C216.042 17.678 215.634 17.612 215.202 17.612C214.662 17.612 214.236 17.726 213.924 17.954C213.612 18.17 213.456 18.47 213.456 18.854C213.456 19.238 213.6 19.538 213.888 19.754C214.188 19.97 214.722 20.18 215.49 20.384C216.546 20.648 217.332 21.008 217.848 21.464C218.376 21.92 218.64 22.544 218.64 23.336C218.64 24.272 218.274 24.986 217.542 25.478C216.822 25.97 215.94 26.216 214.896 26.216C213.456 26.216 212.262 25.802 211.314 24.974L212.196 23.966C213 24.578 213.888 24.884 214.86 24.884C215.484 24.884 215.976 24.758 216.336 24.506C216.708 24.242 216.894 23.888 216.894 23.444C216.894 23.12 216.828 22.862 216.696 22.67C216.564 22.466 216.336 22.292 216.012 22.148C215.688 21.992 215.214 21.83 214.59 21.662C213.582 21.398 212.85 21.044 212.394 20.6C211.95 20.156 211.728 19.592 211.728 18.908C211.728 18.416 211.872 17.972 212.16 17.576C212.46 17.168 212.868 16.856 213.384 16.64C213.912 16.412 214.5 16.298 215.148 16.298ZM221.409 23.714C221.769 23.714 222.069 23.834 222.309 24.074C222.549 24.314 222.669 24.608 222.669 24.956C222.669 25.304 222.549 25.604 222.309 25.856C222.069 26.096 221.769 26.216 221.409 26.216C221.061 26.216 220.767 26.096 220.527 25.856C220.287 25.604 220.167 25.304 220.167 24.956C220.167 24.608 220.287 24.314 220.527 24.074C220.767 23.834 221.061 23.714 221.409 23.714ZM221.409 17.09C221.769 17.09 222.069 17.21 222.309 17.45C222.549 17.69 222.669 17.984 222.669 18.332C222.669 18.68 222.549 18.98 222.309 19.232C222.069 19.472 221.769 19.592 221.409 19.592C221.061 19.592 220.767 19.472 220.527 19.232C220.287 18.98 220.167 18.68 220.167 18.332C220.167 17.984 220.287 17.69 220.527 17.45C220.767 17.21 221.061 17.09 221.409 17.09ZM241.524 26L240.588 22.886H235.89L234.954 26H233.226L237.204 13.598H239.364L243.324 26H241.524ZM236.304 21.5H240.174L238.248 15.02L236.304 21.5ZM247.721 16.298C248.369 16.298 248.951 16.388 249.467 16.568C249.983 16.748 250.475 17.018 250.943 17.378L250.241 18.422C249.809 18.146 249.395 17.942 248.999 17.81C248.615 17.678 248.207 17.612 247.775 17.612C247.235 17.612 246.809 17.726 246.497 17.954C246.185 18.17 246.029 18.47 246.029 18.854C246.029 19.238 246.173 19.538 246.461 19.754C246.761 19.97 247.295 20.18 248.063 20.384C249.119 20.648 249.905 21.008 250.421 21.464C250.949 21.92 251.213 22.544 251.213 23.336C251.213 24.272 250.847 24.986 250.115 25.478C249.395 25.97 248.513 26.216 247.469 26.216C246.029 26.216 244.835 25.802 243.887 24.974L244.769 23.966C245.573 24.578 246.461 24.884 247.433 24.884C248.057 24.884 248.549 24.758 248.909 24.506C249.281 24.242 249.467 23.888 249.467 23.444C249.467 23.12 249.401 22.862 249.269 22.67C249.137 22.466 248.909 22.292 248.585 22.148C248.261 21.992 247.787 21.83 247.163 21.662C246.155 21.398 245.423 21.044 244.967 20.6C244.523 20.156 244.301 19.592 244.301 18.908C244.301 18.416 244.445 17.972 244.733 17.576C245.033 17.168 245.441 16.856 245.957 16.64C246.485 16.412 247.073 16.298 247.721 16.298ZM258.337 25.568C257.713 26 257.005 26.216 256.213 26.216C255.409 26.216 254.779 25.988 254.323 25.532C253.879 25.064 253.657 24.392 253.657 23.516V17.792H252.001V16.514H253.657V14.372L255.313 14.174V16.514H257.563L257.383 17.792H255.313V23.444C255.313 23.936 255.397 24.296 255.565 24.524C255.745 24.74 256.039 24.848 256.447 24.848C256.819 24.848 257.239 24.722 257.707 24.47L258.337 25.568ZM264.175 16.298C264.511 16.298 264.823 16.334 265.111 16.406L264.805 18.026C264.517 17.954 264.241 17.918 263.977 17.918C263.389 17.918 262.915 18.134 262.555 18.566C262.195 18.998 261.913 19.67 261.709 20.582V26H260.053V16.514H261.475L261.637 18.44C261.889 17.732 262.231 17.198 262.663 16.838C263.095 16.478 263.599 16.298 264.175 16.298ZM270.015 16.298C271.347 16.298 272.379 16.742 273.111 17.63C273.855 18.518 274.227 19.724 274.227 21.248C274.227 22.232 274.059 23.102 273.723 23.858C273.387 24.602 272.901 25.184 272.265 25.604C271.629 26.012 270.873 26.216 269.997 26.216C268.665 26.216 267.627 25.772 266.883 24.884C266.139 23.996 265.767 22.79 265.767 21.266C265.767 20.282 265.935 19.418 266.271 18.674C266.607 17.918 267.093 17.336 267.729 16.928C268.365 16.508 269.127 16.298 270.015 16.298ZM270.015 17.63C268.371 17.63 267.549 18.842 267.549 21.266C267.549 23.678 268.365 24.884 269.997 24.884C271.629 24.884 272.445 23.672 272.445 21.248C272.445 18.836 271.635 17.63 270.015 17.63ZM281.427 16.298C282.291 16.298 282.963 16.556 283.443 17.072C283.935 17.588 284.181 18.296 284.181 19.196V26H282.525V19.43C282.525 18.758 282.399 18.284 282.147 18.008C281.895 17.732 281.523 17.594 281.031 17.594C280.527 17.594 280.083 17.738 279.699 18.026C279.315 18.314 278.955 18.728 278.619 19.268V26H276.963V16.514H278.385L278.529 17.918C278.865 17.414 279.279 17.018 279.771 16.73C280.275 16.442 280.827 16.298 281.427 16.298ZM291.074 16.298C292.406 16.298 293.438 16.742 294.17 17.63C294.914 18.518 295.286 19.724 295.286 21.248C295.286 22.232 295.118 23.102 294.782 23.858C294.446 24.602 293.96 25.184 293.324 25.604C292.688 26.012 291.932 26.216 291.056 26.216C289.724 26.216 288.686 25.772 287.942 24.884C287.198 23.996 286.826 22.79 286.826 21.266C286.826 20.282 286.994 19.418 287.33 18.674C287.666 17.918 288.152 17.336 288.788 16.928C289.424 16.508 290.186 16.298 291.074 16.298ZM291.074 17.63C289.43 17.63 288.608 18.842 288.608 21.266C288.608 23.678 289.424 24.884 291.056 24.884C292.688 24.884 293.504 23.672 293.504 21.248C293.504 18.836 292.694 17.63 291.074 17.63ZM307.544 16.298C308.324 16.298 308.948 16.562 309.416 17.09C309.884 17.606 310.118 18.308 310.118 19.196V26H308.462V19.43C308.462 18.206 308.018 17.594 307.13 17.594C306.662 17.594 306.266 17.732 305.942 18.008C305.618 18.272 305.27 18.692 304.898 19.268V26H303.242V19.43C303.242 18.206 302.798 17.594 301.91 17.594C301.43 17.594 301.028 17.732 300.704 18.008C300.38 18.284 300.038 18.704 299.678 19.268V26H298.022V16.514H299.444L299.588 17.9C300.296 16.832 301.208 16.298 302.324 16.298C302.912 16.298 303.41 16.448 303.818 16.748C304.238 17.048 304.538 17.468 304.718 18.008C305.09 17.456 305.498 17.036 305.942 16.748C306.398 16.448 306.932 16.298 307.544 16.298ZM317.13 26.054C316.758 27.158 316.236 28.028 315.564 28.664C314.904 29.312 313.956 29.702 312.72 29.834L312.54 28.538C313.164 28.43 313.662 28.274 314.034 28.07C314.406 27.866 314.7 27.602 314.916 27.278C315.144 26.966 315.354 26.54 315.546 26H314.988L311.802 16.514H313.566L316.104 24.794L318.588 16.514H320.298L317.13 26.054Z\",\n  fill: \"black\"\n});\n\nfunction SvgQuestionList(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 480,\n    height: 481,\n    viewBox: \"0 0 480 481\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17, _ref18, _ref19);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgQuestionList);\nexport default __webpack_public_path__ + \"static/media/QuestionList.bfe1eba5.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport {ReactComponent as QuestionList} from '../../../assets/QuestionList.svg';\nimport Button from '../../UI/Button/Button';\n\nimport './QuestionsHelp.css';\nimport '../../../hoc/Layout/Layout.scss';\nimport {Link} from 'react-router-dom';\n\nconst QuestionsHelp = props => (\n\t<div className=\"QuestionsHelp\">\n\t\t<div className=\"LeftSide\">\n\t\t\t<p>\n\t\t\t\tActive Recall Sheet is a method which will help your remember any complex topic. The\n\t\t\t\tfocus here is put on actively recalling information, that you already know. We\n\t\t\t\tprovide you with a simple, structured sheet that will help you actively work with\n\t\t\t\ttopics to learn. You make yourself a list of questions and then answer them without\n\t\t\t\tlooking at any of your notes. You should check answers after each session and\n\t\t\t\tcorrect yourself where you were wrong. Then choose a color which will tell you next\n\t\t\t\ttime if you answered right or wrong.\n\t\t\t</p>\n\t\t</div>\n\t\t<div className=\"RightSide\">\n\t\t\t<QuestionList />\n\t\t\t<Link to=\"/questions\">\n\t\t\t\t<Button>STUDY</Button>\n\t\t\t</Link>\n\t\t</div>\n\t</div>\n);\n\nexport default QuestionsHelp;\n","import React from 'react';\n\nconst SpacedRepetitionHelp = props => <>SpacedRepetition Help</>;\n\nexport default SpacedRepetitionHelp;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport Button from '../../UI/Button/Button';\nimport EmptyFlashcard from '../../UI/Flashcard/EmptyFlashcard/EmptyFlashcard';\n\nimport './Flashcards.css';\nimport '../../../hoc/Layout/Layout.scss';\n\nconst Flashcards = props => (\n\t<div className=\"Flashcards\">\n\t\t<div className=\"LeftSide\">\n\t\t\t<Link to=\"/flashcards-studying\">\n\t\t\t\t<Button> STUDY</Button>\n\t\t\t</Link>\n\t\t\t<Link to=\"/flashcards-edit-decks\">\n\t\t\t\t<Button> EDIT DECKS</Button>\n\t\t\t</Link>\n\t\t</div>\n\t\t<div className=\"RightSide\">\n\t\t\t<EmptyFlashcard whiteText=\"gato\" greyText=\"cat\" />\n\t\t</div>\n\t</div>\n);\n\nexport default Flashcards;\n","import React, {useEffect} from 'react';\nimport {useState} from 'react';\nimport './Flashcard.css';\nconst Flashcard = ({front, back}) => {\n\tconst [isCardFlipped, setIsCardFlipped] = useState(false);\n\n\tconst [flashcardClassNames, setFlashcardClassNames] = useState('Flashcard');\n\tuseEffect(() => {\n\t\tif (isCardFlipped) {\n\t\t\tconsole.log('clicked');\n\t\t\tsetFlashcardClassNames('Flashcard Flipped');\n\t\t} else {\n\t\t\tsetFlashcardClassNames('Flashcard');\n\t\t}\n\t}, [isCardFlipped]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"Scene\"\n\t\t\tonClick={() => {\n\t\t\t\tconsole.log('onlick');\n\t\t\t\tconsole.log(isCardFlipped);\n\t\t\t\tsetIsCardFlipped(!isCardFlipped);\n\t\t\t}}\n\t\t>\n\t\t\t<div className={flashcardClassNames}>\n\t\t\t\t<div className=\"FlashcardFront\">\n\t\t\t\t\t<span className=\"FlashcardText\">{front}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"FlashcardBack\">\n\t\t\t\t\t<span className=\"FlashcardText\">{back}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Flashcard;\n","import React from 'react';\nimport './FlashcardControl.css';\nconst FlashcardControl = ({children, clicked}) => (\n\t<button className=\"FlashcardControl\" onClick={clicked}>\n\t\t{children}\n\t</button>\n);\n\nexport default FlashcardControl;\n","import React from 'react';\n\nconst DeckItem = ({deck, setActiveDeckName, deleteDeck}) => {\n\tlet ChoseDeckItemClasses = ['ChoseDeckItem'];\n\tif (deck.isActive) {\n\t\tChoseDeckItemClasses = ['ChoseDeckItem', 'ChoseDeckItemActive'];\n\t} else {\n\t\tChoseDeckItemClasses = ['ChoseDeckItem'];\n\t}\n\treturn (\n\t\t<div className=\"DeckItem\" key={deck.name}>\n\t\t\t<span>{deck.name}</span>\n\t\t\t<span className=\"DeckItemsControl\">\n\t\t\t\t<div className={ChoseDeckItemClasses.join(' ')} onClick={setActiveDeckName}>\n\t\t\t\t\t<i className=\"fas fa-play\"></i>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"DeleteDeckItem\" onClick={deleteDeck}>\n\t\t\t\t\t<i className=\"far fa-trash-alt\"></i>\n\t\t\t\t</div>\n\t\t\t</span>\n\t\t</div>\n\t);\n};\n\nexport default DeckItem;\n","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../store/actions/flashcards';\nimport Flashcard from '../../components/UI/Flashcard/Flashcard';\nimport FlashcardControl from './FlashcardControl/FlashcardControl';\nimport DeckItem from './DeckItem/DeckItem';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport './FlashcardsEditDecks.scss';\nimport '../../hoc/Layout/Layout.scss';\n\nconst FlashcardsEditDecks = props => {\n\tconst [deckInputValue, setDeckInputValue] = useState('');\n\tconst [activeDeckName, setActiveDeckName] = useState('');\n\tconst [isAddingCards, setIsAddingCards] = useState(false);\n\tconst [cardInputFront, setCardInputFront] = useState('');\n\tconst [cardInputBack, setCardInputBack] = useState('');\n\tconst [cardsOnList, setCardsOnList] = useState([]);\n\tconst [activeCardFront, setActiveCardFront] = useState('');\n\tconst [activeCardBack, setActiveCardBack] = useState('');\n\tconst [cardNumber, setCardNumber] = useState(0);\n\t//This array is used FOR UI representation of decks,\n\t//The logical content of decks is stored in the Redux store\n\tconst [decksArray, setDecksArray] = useState([]);\n\n\t//update State, and dependent UI when new Active Deck is chosen\n\tuseEffect(() => {\n\t\tif (activeDeckName != '') {\n\t\t\tsetCardNumber(0);\n\t\t\tsetCardInputFront('');\n\t\t\tsetCardInputBack('');\n\t\t\tlet tempDecksArray = [...decksArray];\n\t\t\ttempDecksArray = tempDecksArray.map(deck => ({\n\t\t\t\tname: deck.name,\n\t\t\t\tisActive: false,\n\t\t\t}));\n\t\t\tlet activeDeckIndex = tempDecksArray.findIndex(\n\t\t\t\ttempDeck => tempDeck.name === activeDeckName\n\t\t\t);\n\t\t\ttempDecksArray[activeDeckIndex] = {name: activeDeckName, isActive: true};\n\t\t\tsetDecksArray(tempDecksArray);\n\t\t\tsetCardsOnList([]);\n\n\t\t\tif (props.flashcardsDecks[activeDeckName][0]) {\n\t\t\t\tconsole.log(activeDeckName);\n\t\t\t\tsetActiveCardFront(props.flashcardsDecks[activeDeckName][0].front);\n\t\t\t\tsetActiveCardBack(props.flashcardsDecks[activeDeckName][0].back);\n\t\t\t}\n\t\t}\n\t}, [activeDeckName]);\n\n\tuseEffect(() => {\n\t\tif (activeDeckName !== '' && props.flashcardsDecks[activeDeckName].length !== 0) {\n\t\t\tsetActiveCardFront(props.flashcardsDecks[activeDeckName][cardNumber].front);\n\t\t\tsetActiveCardBack(props.flashcardsDecks[activeDeckName][cardNumber].back);\n\t\t}\n\t}, [cardNumber]);\n\n\tconst addDeckHelper = () => {\n\t\tlet tempDecksArray = [...decksArray];\n\t\tprops.onAddDeck(deckInputValue);\n\t\ttempDecksArray.push({name: deckInputValue, isActive: false});\n\t\tsetDecksArray(tempDecksArray);\n\t\tsetDeckInputValue('');\n\t};\n\n\tconst AddNewDeckHandler = event => {\n\t\tif (deckInputValue.trim() != '' && !props.flashcardsDecks[deckInputValue]) {\n\t\t\tif (event.key && event.key === 'Enter') {\n\t\t\t\taddDeckHelper();\n\t\t\t} else if (!event.key) {\n\t\t\t\taddDeckHelper();\n\t\t\t}\n\t\t}\n\t};\n\n\tconst DeleteDeckHandler = deckName => {\n\t\tif (props.flashcardsDecks[deckName]) {\n\t\t\tlet tempDecksArray = [...decksArray];\n\t\t\tlet deckToDeleteIndex = tempDecksArray.findIndex(\n\t\t\t\ttempDeck => tempDeck.name === deckName\n\t\t\t);\n\t\t\ttempDecksArray.splice(deckToDeleteIndex, 1);\n\t\t\tsetDecksArray(tempDecksArray);\n\t\t\tprops.onDeleteDeck(deckName);\n\t\t\tif (deckName === activeDeckName) {\n\t\t\t\tsetActiveDeckName('');\n\t\t\t}\n\t\t}\n\t};\n\n\tconst AddCardToCardsArrayHandler = () => {\n\t\tif (cardInputFront && cardInputBack) {\n\t\t\tlet card = {front: cardInputFront, back: cardInputBack};\n\t\t\tlet tempActiveCards = [...cardsOnList];\n\t\t\ttempActiveCards.push(card);\n\t\t\tsetCardsOnList(tempActiveCards);\n\t\t\tsetCardInputFront('');\n\t\t\tsetCardInputBack('');\n\t\t}\n\t};\n\n\tconst PushCardsArrayHandler = () => {\n\t\tif (cardsOnList.length !== 0) {\n\t\t\tprops.onPushingCards(activeDeckName, cardsOnList);\n\t\t\tsetCardsOnList([]);\n\t\t\tsetIsAddingCards(false);\n\t\t\tsetActiveCardFront(props.flashcardsDecks[activeDeckName][0].front);\n\t\t\tsetActiveCardBack(props.flashcardsDecks[activeDeckName][0].back);\n\t\t}\n\t};\n\n\tlet decks = decksArray.map(deck => (\n\t\t<DeckItem\n\t\t\tkey={deck.name}\n\t\t\tdeck={deck}\n\t\t\tsetActiveDeckName={() => setActiveDeckName(deck.name)}\n\t\t\tdeleteDeck={() => DeleteDeckHandler(deck.name)}\n\t\t/>\n\t));\n\n\tlet cards = cardsOnList.map((card, index) => (\n\t\t<div className=\"CardItem\" key={`${card.front} ${card.back} ${index}`}>\n\t\t\t<span className=\"CardItemText\">{card.front}</span>\n\t\t\t<span className=\"CardItemText\">{card.back}</span>\n\t\t</div>\n\t));\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"FlashcardsEditDecks\">\n\t\t\t\t<div className=\"LeftSide\">\n\t\t\t\t\t<div className=\"Decks\">\n\t\t\t\t\t\t<div className=\"YourDecks\">Your Decks: </div>\n\t\t\t\t\t\t<div className=\"DeckList\">\n\t\t\t\t\t\t\t{props.flashcardsDecks.length !== 0 ? decks : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<label className=\"AddDeckLabel\">\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName=\"AddDeckText\"\n\t\t\t\t\t\t\t\tonClick={event => AddNewDeckHandler(event)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tAdd a deck\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"AddDeckInput\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalue={deckInputValue}\n\t\t\t\t\t\t\t\tonChange={e => setDeckInputValue(e.target.value)}\n\t\t\t\t\t\t\t\tonKeyPress={event => AddNewDeckHandler(event)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"RightSide\">\n\t\t\t\t\t<Flashcard front={activeCardFront} back={activeCardBack} />\n\t\t\t\t\t<span className=\"FlashcardControls\">\n\t\t\t\t\t\t<FlashcardControl\n\t\t\t\t\t\t\tclicked={() => {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tactiveDeckName !== '' &&\n\t\t\t\t\t\t\t\t\tprops.flashcardsDecks[activeDeckName].length !== 0\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tlet newCardNumber = cardNumber;\n\t\t\t\t\t\t\t\t\tnewCardNumber === 0\n\t\t\t\t\t\t\t\t\t\t? (newCardNumber =\n\t\t\t\t\t\t\t\t\t\t\t\tprops.flashcardsDecks[activeDeckName].length - 1)\n\t\t\t\t\t\t\t\t\t\t: (newCardNumber -= 1);\n\n\t\t\t\t\t\t\t\t\tsetCardNumber(cardNumber => newCardNumber);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i className=\"fas fa-angle-left\"></i>\n\t\t\t\t\t\t</FlashcardControl>\n\t\t\t\t\t\t<FlashcardControl\n\t\t\t\t\t\t\tclicked={() => {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tactiveDeckName !== '' &&\n\t\t\t\t\t\t\t\t\tprops.flashcardsDecks[activeDeckName].length !== 0\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tlet newCardNumber =\n\t\t\t\t\t\t\t\t\t\t(cardNumber + 1) %\n\t\t\t\t\t\t\t\t\t\tprops.flashcardsDecks[activeDeckName].length;\n\t\t\t\t\t\t\t\t\tsetCardNumber(cardNumber => newCardNumber);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i className=\"fas fa-angle-right\"></i>\n\t\t\t\t\t\t</FlashcardControl>\n\t\t\t\t\t\t<FlashcardControl\n\t\t\t\t\t\t\tclicked={() => {\n\t\t\t\t\t\t\t\tif (activeDeckName !== '') setIsAddingCards(state => !state);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i className=\"fas fa-plus\"></i>\n\t\t\t\t\t\t</FlashcardControl>\n\t\t\t\t\t\t<FlashcardControl clicked={() => {}}>\n\t\t\t\t\t\t\t<i className=\"fas fa-pen\"></i>\n\t\t\t\t\t\t</FlashcardControl>\n\t\t\t\t\t\t<FlashcardControl clicked={() => {}}>\n\t\t\t\t\t\t\t<i className=\"far fa-trash-alt\"></i>\n\t\t\t\t\t\t</FlashcardControl>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Modal\n\t\t\t\tshow={isAddingCards}\n\t\t\t\tmodalClosed={() => {\n\t\t\t\t\tsetIsAddingCards(state => !state);\n\t\t\t\t\tsetCardsOnList([]);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className=\"AddCardsModal\">\n\t\t\t\t\t<span className=\"AddCardsTitle\"> ADD CARDS</span>\n\t\t\t\t\t<div className=\"AddCardsList\">\n\t\t\t\t\t\t<div className=\"AddCardsInput\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tinputValue={cardInputFront}\n\t\t\t\t\t\t\t\tsetValue={event => setCardInputFront(event.target.value)}\n\t\t\t\t\t\t\t\tlabelDescription=\"Front\"\n\t\t\t\t\t\t\t\tinputType=\"text\"\n\t\t\t\t\t\t\t\tisInputCorrect={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tinputValue={cardInputBack}\n\t\t\t\t\t\t\t\tsetValue={event => setCardInputBack(event.target.value)}\n\t\t\t\t\t\t\t\tlabelDescription=\"Back\"\n\t\t\t\t\t\t\t\tinputType=\"text\"\n\t\t\t\t\t\t\t\tisInputCorrect={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"AddCardButton\" onClick={AddCardToCardsArrayHandler}>\n\t\t\t\t\t\t\t\t<i className=\"fas fa-plus\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{cards}\n\t\t\t\t\t</div>\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName=\"AddCardsArray\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tPushCardsArrayHandler();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button>ADD CARDS</Button>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tflashcardsDecks: state.flashcardsReducer.flashcardsDecks,\n\t};\n};\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonAddDeck: deckName => dispatch(actions.addDeck(deckName)),\n\t\tonDeleteDeck: deckName => dispatch(actions.deleteDeck(deckName)),\n\t\tonPushingCards: (deckName, cardsArray) => dispatch(actions.pushCards(deckName, cardsArray)),\n\t};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FlashcardsEditDecks);\n","import axios from 'axios';\nimport * as actionTypes from '../actions/actionTypes';\n\nexport const pushCards = (deckName, cardsArray) => {\n\treturn {\n\t\ttype: actionTypes.PUSH_CARDS,\n\t\tdeckToModify: deckName,\n\t\tcardsArray: cardsArray,\n\t};\n};\n\nexport const addDeck = deckName => {\n\treturn {\n\t\ttype: actionTypes.ADD_DECK,\n\t\tnewDeck: deckName,\n\t};\n};\n\nexport const deleteDeck = deckName => {\n\treturn {\n\t\ttype: actionTypes.DELETE_DECK,\n\t\tdeckToDelete: deckName,\n\t};\n};\n","import './App.scss';\n// import Button from './components/UI/Button/Button';\n// import Auth from './containers/Auth/Auth';\n// import Modal from './components/UI/Modal/Modal';\nimport {Redirect, Route, Switch, withRouter} from 'react-router-dom';\nimport Navbar from './components/Navigation/Navbar/Navbar';\nimport Footer from './components/Footer/Footer';\nimport Main from './components/pages/Main/Main';\nimport Study from './components/pages/Study/Study';\nimport FlashcardsHelp from './components/pages/FlashcardsHelp/FlashcardsHelp';\nimport Layout from './hoc/Layout/Layout';\nimport QuestionsHelp from './components/pages/QuestionsHelp/QuestionsHelp';\nimport SpacedRepetitionHelp from './components/pages/SpacedRepetitionHelp/SpacedRepetitionHelp';\nimport Flashcards from './components/pages/Flashcards/Flashcards';\nimport FlashcardsEditDecks from './containers/FlashcardsEditDecks/FlashcardsEditDecks';\n\nfunction App() {\n\tlet routes = (\n\t\t<Switch>\n\t\t\t<Route path=\"/\" exact component={Main} />\n\t\t\t<Route path=\"/study\" exact component={Study} />\n\n\t\t\t<Route path=\"/flashcards-help\" exact component={FlashcardsHelp} />\n\t\t\t<Route path=\"/spaced-repetition-help\" exact component={SpacedRepetitionHelp} />\n\t\t\t<Route path=\"/questions-help\" exact component={QuestionsHelp} />\n\t\t\t<Route path=\"/flashcards\" exact component={Flashcards} />\n\t\t\t<Route path=\"/flashcards-edit-decks\" exact component={FlashcardsEditDecks} />\n\n\t\t\t{/* <Redirect to=\"/\" /> */}\n\t\t</Switch>\n\t);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{/* <Button>STUDY</Button>\n\t\t\t< show={true} modalClosed={() => {}}>\n\t\t\t<Auth />\n\t\t\t</\n\t\tModal> */}\n\t\t\t<Navbar />\n\t\t\t<Layout>{routes}</Layout>\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n\ttoken: null,\n\tlocalId: null,\n\tname: '',\n\tloading: false,\n\terror: null,\n\tredirectPath: '/',\n};\n\nconst authStart = (state, action) => {\n\treturn {...state, error: null, loading: true};\n};\n\nconst authFail = (state, action) => {\n\treturn {...state, error: action.error, loading: false};\n};\n\nconst authSuccess = (state, action) => {\n\treturn {\n\t\t...state,\n\t\terror: null,\n\t\tloading: false,\n\t\ttoken: action.token,\n\t\tlocalId: action.localId,\n\t\tname: action.name,\n\t};\n};\n\nconst authLogout = (state, action) => {\n\treturn {...state, token: null, localId: null, name: ''};\n};\n\nconst authSetName = (state, action) => {\n\treturn {...state, name: action.name};\n};\n\nconst authReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.AUTH_START:\n\t\t\treturn authStart(state, action);\n\t\tcase actionTypes.AUTH_FAIL:\n\t\t\treturn authFail(state, action);\n\t\tcase actionTypes.AUTH_SUCCESS:\n\t\t\treturn authSuccess(state, action);\n\t\tcase actionTypes.AUTH_LOGOUT:\n\t\t\treturn authLogout(state, action);\n\t\tcase actionTypes.AUTH_SET_NAME:\n\t\t\treturn authSetName(state, action);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default authReducer;\n","import {connect} from 'react-redux';\nimport * as actionTypes from '../actions/actionTypes';\n\n/*\nconst initialState = {\n\tflashcardsDecks: {\n\t\tnameOfFirstDeck: [{card1}, {card2}],\n\t\tnameOfSecondDeck: [{card3}, {card4}, {card5}]\n\t},\n};\n*/\n\nconst initialState = {\n\tflashcardsDecks: {\n\t\ta: [{front: 'ali', back: 'gator'}],\n\t},\n};\n\nconst addDeck = (state, action) => {\n\tconst newFlashcardDecks = {...state.flashcardsDecks, [action.newDeck]: []};\n\treturn {...state, flashcardsDecks: newFlashcardDecks};\n};\n\nconst deleteDeck = (state, action) => {\n\tlet newFlashcardDecks = {...state.flashcardsDecks};\n\tdelete newFlashcardDecks[action.deckToDelete];\n\treturn {...state, flashcardsDecks: newFlashcardDecks};\n};\n\nconst pushCards = (state, action) => {\n\tlet newFlashcardDecks = {...state.flashcardsDecks};\n\tlet deckToChange = newFlashcardDecks[action.deckToModify];\n\tdeckToChange.push(...action.cardsArray);\n\tconsole.log('pushing is working');\n\treturn {\n\t\t...state,\n\t\tflashcardsDecks: newFlashcardDecks,\n\t};\n};\n\nconst flashcardsReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.ADD_DECK:\n\t\t\treturn addDeck(state, action);\n\t\tcase actionTypes.DELETE_DECK:\n\t\t\treturn deleteDeck(state, action);\n\t\tcase actionTypes.PUSH_CARDS:\n\t\t\treturn pushCards(state, action);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\nexport default flashcardsReducer;\n","import {combineReducers} from 'redux';\nimport authReducer from './auth';\nimport flashcardsReducer from './flashcards';\n\nexport default combineReducers({\n\tauthReducer,\n\tflashcardsReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport reducer from './store/reducers/reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = reducer;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<App />\n\t\t\t</BrowserRouter>\n\t\t</Provider>\n\t</React.StrictMode>\n);\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}